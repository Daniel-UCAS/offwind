//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Offwind.DbModels", "FK_DContent_DContentTypes", "DContentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Offwind.WebApp.Models.DContentType), "DContent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Offwind.WebApp.Models.DContent), true)]
[assembly: EdmRelationshipAttribute("Offwind.DbModels", "FK_DUserProfile_Membership", "webpages_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Offwind.WebApp.Models.webpages_Membership), "DUserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Offwind.WebApp.Models.DUserProfile), true)]
[assembly: EdmRelationshipAttribute("Offwind.DbModels", "FK_DUserProfile_UsersInRoles", "webpages_UsersInRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Offwind.WebApp.Models.webpages_UsersInRoles), "DUserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Offwind.WebApp.Models.DUserProfile), true)]
[assembly: EdmRelationshipAttribute("Offwind.DbModels", "fk_RoleId", "webpages_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Offwind.WebApp.Models.webpages_Roles), "webpages_UsersInRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Offwind.WebApp.Models.webpages_UsersInRoles), true)]

#endregion

namespace Offwind.WebApp.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OffwindEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OffwindEntities object using the connection string found in the 'OffwindEntities' section of the application configuration file.
        /// </summary>
        public OffwindEntities() : base("name=OffwindEntities", "OffwindEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OffwindEntities object.
        /// </summary>
        public OffwindEntities(string connectionString) : base(connectionString, "OffwindEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OffwindEntities object.
        /// </summary>
        public OffwindEntities(EntityConnection connection) : base(connection, "OffwindEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DCase> DCases
        {
            get
            {
                if ((_DCases == null))
                {
                    _DCases = base.CreateObjectSet<DCase>("DCases");
                }
                return _DCases;
            }
        }
        private ObjectSet<DCase> _DCases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DJob> DJobs
        {
            get
            {
                if ((_DJobs == null))
                {
                    _DJobs = base.CreateObjectSet<DJob>("DJobs");
                }
                return _DJobs;
            }
        }
        private ObjectSet<DJob> _DJobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MesoscaleDatabas> MesoscaleDatabases
        {
            get
            {
                if ((_MesoscaleDatabases == null))
                {
                    _MesoscaleDatabases = base.CreateObjectSet<MesoscaleDatabas>("MesoscaleDatabases");
                }
                return _MesoscaleDatabases;
            }
        }
        private ObjectSet<MesoscaleDatabas> _MesoscaleDatabases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MesoscaleTabFile> MesoscaleTabFiles
        {
            get
            {
                if ((_MesoscaleTabFiles == null))
                {
                    _MesoscaleTabFiles = base.CreateObjectSet<MesoscaleTabFile>("MesoscaleTabFiles");
                }
                return _MesoscaleTabFiles;
            }
        }
        private ObjectSet<MesoscaleTabFile> _MesoscaleTabFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmallMesoscaleTabFile> SmallMesoscaleTabFiles
        {
            get
            {
                if ((_SmallMesoscaleTabFiles == null))
                {
                    _SmallMesoscaleTabFiles = base.CreateObjectSet<SmallMesoscaleTabFile>("SmallMesoscaleTabFiles");
                }
                return _SmallMesoscaleTabFiles;
            }
        }
        private ObjectSet<SmallMesoscaleTabFile> _SmallMesoscaleTabFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DContentType> DContentTypes
        {
            get
            {
                if ((_DContentTypes == null))
                {
                    _DContentTypes = base.CreateObjectSet<DContentType>("DContentTypes");
                }
                return _DContentTypes;
            }
        }
        private ObjectSet<DContentType> _DContentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DContent> DContents
        {
            get
            {
                if ((_DContents == null))
                {
                    _DContents = base.CreateObjectSet<DContent>("DContents");
                }
                return _DContents;
            }
        }
        private ObjectSet<DContent> _DContents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_OAuthMembership> webpages_OAuthMembership
        {
            get
            {
                if ((_webpages_OAuthMembership == null))
                {
                    _webpages_OAuthMembership = base.CreateObjectSet<webpages_OAuthMembership>("webpages_OAuthMembership");
                }
                return _webpages_OAuthMembership;
            }
        }
        private ObjectSet<webpages_OAuthMembership> _webpages_OAuthMembership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DUserProfile> DUserProfiles
        {
            get
            {
                if ((_DUserProfiles == null))
                {
                    _DUserProfiles = base.CreateObjectSet<DUserProfile>("DUserProfiles");
                }
                return _DUserProfiles;
            }
        }
        private ObjectSet<DUserProfile> _DUserProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_Membership> webpages_Membership
        {
            get
            {
                if ((_webpages_Membership == null))
                {
                    _webpages_Membership = base.CreateObjectSet<webpages_Membership>("webpages_Membership");
                }
                return _webpages_Membership;
            }
        }
        private ObjectSet<webpages_Membership> _webpages_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_Roles> webpages_Roles
        {
            get
            {
                if ((_webpages_Roles == null))
                {
                    _webpages_Roles = base.CreateObjectSet<webpages_Roles>("webpages_Roles");
                }
                return _webpages_Roles;
            }
        }
        private ObjectSet<webpages_Roles> _webpages_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_UsersInRoles> webpages_UsersInRoles
        {
            get
            {
                if ((_webpages_UsersInRoles == null))
                {
                    _webpages_UsersInRoles = base.CreateObjectSet<webpages_UsersInRoles>("webpages_UsersInRoles");
                }
                return _webpages_UsersInRoles;
            }
        }
        private ObjectSet<webpages_UsersInRoles> _webpages_UsersInRoles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DCases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDCases(DCase dCase)
        {
            base.AddObject("DCases", dCase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DJobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDJobs(DJob dJob)
        {
            base.AddObject("DJobs", dJob);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MesoscaleDatabases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMesoscaleDatabases(MesoscaleDatabas mesoscaleDatabas)
        {
            base.AddObject("MesoscaleDatabases", mesoscaleDatabas);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MesoscaleTabFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMesoscaleTabFiles(MesoscaleTabFile mesoscaleTabFile)
        {
            base.AddObject("MesoscaleTabFiles", mesoscaleTabFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SmallMesoscaleTabFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSmallMesoscaleTabFiles(SmallMesoscaleTabFile smallMesoscaleTabFile)
        {
            base.AddObject("SmallMesoscaleTabFiles", smallMesoscaleTabFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DContentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDContentTypes(DContentType dContentType)
        {
            base.AddObject("DContentTypes", dContentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDContents(DContent dContent)
        {
            base.AddObject("DContents", dContent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_OAuthMembership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_OAuthMembership(webpages_OAuthMembership webpages_OAuthMembership)
        {
            base.AddObject("webpages_OAuthMembership", webpages_OAuthMembership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DUserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDUserProfiles(DUserProfile dUserProfile)
        {
            base.AddObject("DUserProfiles", dUserProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_Membership(webpages_Membership webpages_Membership)
        {
            base.AddObject("webpages_Membership", webpages_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_Roles(webpages_Roles webpages_Roles)
        {
            base.AddObject("webpages_Roles", webpages_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_UsersInRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_UsersInRoles(webpages_UsersInRoles webpages_UsersInRoles)
        {
            base.AddObject("webpages_UsersInRoles", webpages_UsersInRoles);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DCase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DCase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DCase object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        public static DCase CreateDCase(global::System.Guid id, global::System.DateTime created, global::System.String owner, global::System.String name, global::System.String model)
        {
            DCase dCase = new DCase();
            dCase.Id = id;
            dCase.Created = created;
            dCase.Owner = owner;
            dCase.Name = name;
            dCase.Model = model;
            return dCase;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CurrentJobId
        {
            get
            {
                return _CurrentJobId;
            }
            set
            {
                OnCurrentJobIdChanging(value);
                ReportPropertyChanging("CurrentJobId");
                _CurrentJobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentJobId");
                OnCurrentJobIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CurrentJobId;
        partial void OnCurrentJobIdChanging(Nullable<global::System.Guid> value);
        partial void OnCurrentJobIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DContent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DContent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="route">Initial value of the Route property.</param>
        /// <param name="browserTitle">Initial value of the BrowserTitle property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="announce">Initial value of the Announce property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        /// <param name="displayDateTime">Initial value of the DisplayDateTime property.</param>
        /// <param name="isPublished">Initial value of the IsPublished property.</param>
        public static DContent CreateDContent(global::System.Guid id, global::System.String typeId, global::System.String route, global::System.String browserTitle, global::System.String name, global::System.String title, global::System.String announce, global::System.String content, global::System.DateTime created, global::System.DateTime updated, global::System.DateTime displayDateTime, global::System.Boolean isPublished)
        {
            DContent dContent = new DContent();
            dContent.Id = id;
            dContent.TypeId = typeId;
            dContent.Route = route;
            dContent.BrowserTitle = browserTitle;
            dContent.Name = name;
            dContent.Title = title;
            dContent.Announce = announce;
            dContent.Content = content;
            dContent.Created = created;
            dContent.Updated = updated;
            dContent.DisplayDateTime = displayDateTime;
            dContent.IsPublished = isPublished;
            return dContent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.String _TypeId;
        partial void OnTypeIdChanging(global::System.String value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Route
        {
            get
            {
                return _Route;
            }
            set
            {
                OnRouteChanging(value);
                ReportPropertyChanging("Route");
                _Route = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Route");
                OnRouteChanged();
            }
        }
        private global::System.String _Route;
        partial void OnRouteChanging(global::System.String value);
        partial void OnRouteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrowserTitle
        {
            get
            {
                return _BrowserTitle;
            }
            set
            {
                OnBrowserTitleChanging(value);
                ReportPropertyChanging("BrowserTitle");
                _BrowserTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrowserTitle");
                OnBrowserTitleChanged();
            }
        }
        private global::System.String _BrowserTitle;
        partial void OnBrowserTitleChanging(global::System.String value);
        partial void OnBrowserTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Announce
        {
            get
            {
                return _Announce;
            }
            set
            {
                OnAnnounceChanging(value);
                ReportPropertyChanging("Announce");
                _Announce = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Announce");
                OnAnnounceChanged();
            }
        }
        private global::System.String _Announce;
        partial void OnAnnounceChanging(global::System.String value);
        partial void OnAnnounceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DisplayDateTime
        {
            get
            {
                return _DisplayDateTime;
            }
            set
            {
                OnDisplayDateTimeChanging(value);
                ReportPropertyChanging("DisplayDateTime");
                _DisplayDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayDateTime");
                OnDisplayDateTimeChanged();
            }
        }
        private global::System.DateTime _DisplayDateTime;
        partial void OnDisplayDateTimeChanging(global::System.DateTime value);
        partial void OnDisplayDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublished
        {
            get
            {
                return _IsPublished;
            }
            set
            {
                OnIsPublishedChanging(value);
                ReportPropertyChanging("IsPublished");
                _IsPublished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublished");
                OnIsPublishedChanged();
            }
        }
        private global::System.Boolean _IsPublished;
        partial void OnIsPublishedChanging(global::System.Boolean value);
        partial void OnIsPublishedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DContent_DContentTypes", "DContentType")]
        public DContentType DContentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DContentType>("Offwind.DbModels.FK_DContent_DContentTypes", "DContentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DContentType>("Offwind.DbModels.FK_DContent_DContentTypes", "DContentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DContentType> DContentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DContentType>("Offwind.DbModels.FK_DContent_DContentTypes", "DContentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DContentType>("Offwind.DbModels.FK_DContent_DContentTypes", "DContentType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DContentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DContentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DContentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DContentType CreateDContentType(global::System.String id)
        {
            DContentType dContentType = new DContentType();
            dContentType.Id = id;
            return dContentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DContent_DContentTypes", "DContent")]
        public EntityCollection<DContent> DContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DContent>("Offwind.DbModels.FK_DContent_DContentTypes", "DContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DContent>("Offwind.DbModels.FK_DContent_DContentTypes", "DContent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DJob")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DJob : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DJob object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="started">Initial value of the Started property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="state">Initial value of the State property.</param>
        public static DJob CreateDJob(global::System.Guid id, global::System.DateTime started, global::System.String owner, global::System.String name, global::System.String state)
        {
            DJob dJob = new DJob();
            dJob.Id = id;
            dJob.Started = started;
            dJob.Owner = owner;
            dJob.Name = name;
            dJob.State = state;
            return dJob;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Started
        {
            get
            {
                return _Started;
            }
            set
            {
                OnStartedChanging(value);
                ReportPropertyChanging("Started");
                _Started = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Started");
                OnStartedChanged();
            }
        }
        private global::System.DateTime _Started;
        partial void OnStartedChanging(global::System.DateTime value);
        partial void OnStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RunningSince
        {
            get
            {
                return _RunningSince;
            }
            set
            {
                OnRunningSinceChanging(value);
                ReportPropertyChanging("RunningSince");
                _RunningSince = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunningSince");
                OnRunningSinceChanged();
            }
        }
        private Nullable<global::System.DateTime> _RunningSince;
        partial void OnRunningSinceChanging(Nullable<global::System.DateTime> value);
        partial void OnRunningSinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Finished
        {
            get
            {
                return _Finished;
            }
            set
            {
                OnFinishedChanging(value);
                ReportPropertyChanging("Finished");
                _Finished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Finished");
                OnFinishedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Finished;
        partial void OnFinishedChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private global::System.String _Result;
        partial void OnResultChanging(global::System.String value);
        partial void OnResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultData
        {
            get
            {
                return _ResultData;
            }
            set
            {
                OnResultDataChanging(value);
                ReportPropertyChanging("ResultData");
                _ResultData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultData");
                OnResultDataChanged();
            }
        }
        private global::System.String _ResultData;
        partial void OnResultDataChanging(global::System.String value);
        partial void OnResultDataChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DUserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DUserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DUserProfile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static DUserProfile CreateDUserProfile(global::System.Int32 userId, global::System.String userName)
        {
            DUserProfile dUserProfile = new DUserProfile();
            dUserProfile.UserId = userId;
            dUserProfile.UserName = userName;
            return dUserProfile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DUserProfile_Membership", "webpages_Membership")]
        public webpages_Membership webpages_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_Membership>("Offwind.DbModels.FK_DUserProfile_Membership", "webpages_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_Membership>("Offwind.DbModels.FK_DUserProfile_Membership", "webpages_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<webpages_Membership> webpages_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_Membership>("Offwind.DbModels.FK_DUserProfile_Membership", "webpages_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<webpages_Membership>("Offwind.DbModels.FK_DUserProfile_Membership", "webpages_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DUserProfile_UsersInRoles", "webpages_UsersInRoles")]
        public webpages_UsersInRoles webpages_UsersInRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_UsersInRoles>("Offwind.DbModels.FK_DUserProfile_UsersInRoles", "webpages_UsersInRoles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_UsersInRoles>("Offwind.DbModels.FK_DUserProfile_UsersInRoles", "webpages_UsersInRoles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<webpages_UsersInRoles> webpages_UsersInRolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_UsersInRoles>("Offwind.DbModels.FK_DUserProfile_UsersInRoles", "webpages_UsersInRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<webpages_UsersInRoles>("Offwind.DbModels.FK_DUserProfile_UsersInRoles", "webpages_UsersInRoles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="MesoscaleDatabas")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MesoscaleDatabas : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MesoscaleDatabas object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MesoscaleDatabas CreateMesoscaleDatabas(global::System.Int16 id, global::System.String name)
        {
            MesoscaleDatabas mesoscaleDatabas = new MesoscaleDatabas();
            mesoscaleDatabas.Id = id;
            mesoscaleDatabas.Name = name;
            return mesoscaleDatabas;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int16 _Id;
        partial void OnIdChanging(global::System.Int16 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="MesoscaleTabFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MesoscaleTabFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MesoscaleTabFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="databaseId">Initial value of the DatabaseId property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static MesoscaleTabFile CreateMesoscaleTabFile(global::System.Int32 id, global::System.Int16 databaseId, global::System.Decimal latitude, global::System.Decimal longitude, global::System.String text)
        {
            MesoscaleTabFile mesoscaleTabFile = new MesoscaleTabFile();
            mesoscaleTabFile.Id = id;
            mesoscaleTabFile.DatabaseId = databaseId;
            mesoscaleTabFile.Latitude = latitude;
            mesoscaleTabFile.Longitude = longitude;
            mesoscaleTabFile.Text = text;
            return mesoscaleTabFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DatabaseId
        {
            get
            {
                return _DatabaseId;
            }
            set
            {
                OnDatabaseIdChanging(value);
                ReportPropertyChanging("DatabaseId");
                _DatabaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatabaseId");
                OnDatabaseIdChanged();
            }
        }
        private global::System.Int16 _DatabaseId;
        partial void OnDatabaseIdChanging(global::System.Int16 value);
        partial void OnDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Decimal _Latitude;
        partial void OnLatitudeChanging(global::System.Decimal value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Decimal _Longitude;
        partial void OnLongitudeChanging(global::System.Decimal value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="SmallMesoscaleTabFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmallMesoscaleTabFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SmallMesoscaleTabFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="databaseId">Initial value of the DatabaseId property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        public static SmallMesoscaleTabFile CreateSmallMesoscaleTabFile(global::System.Int32 id, global::System.Int16 databaseId, global::System.Decimal latitude, global::System.Decimal longitude)
        {
            SmallMesoscaleTabFile smallMesoscaleTabFile = new SmallMesoscaleTabFile();
            smallMesoscaleTabFile.Id = id;
            smallMesoscaleTabFile.DatabaseId = databaseId;
            smallMesoscaleTabFile.Latitude = latitude;
            smallMesoscaleTabFile.Longitude = longitude;
            return smallMesoscaleTabFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DatabaseId
        {
            get
            {
                return _DatabaseId;
            }
            set
            {
                if (_DatabaseId != value)
                {
                    OnDatabaseIdChanging(value);
                    ReportPropertyChanging("DatabaseId");
                    _DatabaseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DatabaseId");
                    OnDatabaseIdChanged();
                }
            }
        }
        private global::System.Int16 _DatabaseId;
        partial void OnDatabaseIdChanging(global::System.Int16 value);
        partial void OnDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                if (_Latitude != value)
                {
                    OnLatitudeChanging(value);
                    ReportPropertyChanging("Latitude");
                    _Latitude = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Latitude");
                    OnLatitudeChanged();
                }
            }
        }
        private global::System.Decimal _Latitude;
        partial void OnLatitudeChanging(global::System.Decimal value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                if (_Longitude != value)
                {
                    OnLongitudeChanging(value);
                    ReportPropertyChanging("Longitude");
                    _Longitude = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Longitude");
                    OnLongitudeChanged();
                }
            }
        }
        private global::System.Decimal _Longitude;
        partial void OnLongitudeChanging(global::System.Decimal value);
        partial void OnLongitudeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="webpages_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_Membership object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="passwordFailuresSinceLastSuccess">Initial value of the PasswordFailuresSinceLastSuccess property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        public static webpages_Membership Createwebpages_Membership(global::System.Int32 userId, global::System.Int32 passwordFailuresSinceLastSuccess, global::System.String password, global::System.String passwordSalt)
        {
            webpages_Membership webpages_Membership = new webpages_Membership();
            webpages_Membership.UserId = userId;
            webpages_Membership.PasswordFailuresSinceLastSuccess = passwordFailuresSinceLastSuccess;
            webpages_Membership.Password = password;
            webpages_Membership.PasswordSalt = passwordSalt;
            return webpages_Membership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConfirmationToken
        {
            get
            {
                return _ConfirmationToken;
            }
            set
            {
                OnConfirmationTokenChanging(value);
                ReportPropertyChanging("ConfirmationToken");
                _ConfirmationToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConfirmationToken");
                OnConfirmationTokenChanged();
            }
        }
        private global::System.String _ConfirmationToken;
        partial void OnConfirmationTokenChanging(global::System.String value);
        partial void OnConfirmationTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsConfirmed
        {
            get
            {
                return _IsConfirmed;
            }
            set
            {
                OnIsConfirmedChanging(value);
                ReportPropertyChanging("IsConfirmed");
                _IsConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConfirmed");
                OnIsConfirmedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsConfirmed;
        partial void OnIsConfirmedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPasswordFailureDate
        {
            get
            {
                return _LastPasswordFailureDate;
            }
            set
            {
                OnLastPasswordFailureDateChanging(value);
                ReportPropertyChanging("LastPasswordFailureDate");
                _LastPasswordFailureDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordFailureDate");
                OnLastPasswordFailureDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPasswordFailureDate;
        partial void OnLastPasswordFailureDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPasswordFailureDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFailuresSinceLastSuccess
        {
            get
            {
                return _PasswordFailuresSinceLastSuccess;
            }
            set
            {
                OnPasswordFailuresSinceLastSuccessChanging(value);
                ReportPropertyChanging("PasswordFailuresSinceLastSuccess");
                _PasswordFailuresSinceLastSuccess = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFailuresSinceLastSuccess");
                OnPasswordFailuresSinceLastSuccessChanged();
            }
        }
        private global::System.Int32 _PasswordFailuresSinceLastSuccess;
        partial void OnPasswordFailuresSinceLastSuccessChanging(global::System.Int32 value);
        partial void OnPasswordFailuresSinceLastSuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordChangedDate
        {
            get
            {
                return _PasswordChangedDate;
            }
            set
            {
                OnPasswordChangedDateChanging(value);
                ReportPropertyChanging("PasswordChangedDate");
                _PasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordChangedDate");
                OnPasswordChangedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordChangedDate;
        partial void OnPasswordChangedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordVerificationToken
        {
            get
            {
                return _PasswordVerificationToken;
            }
            set
            {
                OnPasswordVerificationTokenChanging(value);
                ReportPropertyChanging("PasswordVerificationToken");
                _PasswordVerificationToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordVerificationToken");
                OnPasswordVerificationTokenChanged();
            }
        }
        private global::System.String _PasswordVerificationToken;
        partial void OnPasswordVerificationTokenChanging(global::System.String value);
        partial void OnPasswordVerificationTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordVerificationTokenExpirationDate
        {
            get
            {
                return _PasswordVerificationTokenExpirationDate;
            }
            set
            {
                OnPasswordVerificationTokenExpirationDateChanging(value);
                ReportPropertyChanging("PasswordVerificationTokenExpirationDate");
                _PasswordVerificationTokenExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordVerificationTokenExpirationDate");
                OnPasswordVerificationTokenExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordVerificationTokenExpirationDate;
        partial void OnPasswordVerificationTokenExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordVerificationTokenExpirationDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DUserProfile_Membership", "DUserProfile")]
        public DUserProfile DUserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_Membership", "DUserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_Membership", "DUserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DUserProfile> DUserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_Membership", "DUserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_Membership", "DUserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="webpages_OAuthMembership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_OAuthMembership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_OAuthMembership object.
        /// </summary>
        /// <param name="provider">Initial value of the Provider property.</param>
        /// <param name="providerUserId">Initial value of the ProviderUserId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static webpages_OAuthMembership Createwebpages_OAuthMembership(global::System.String provider, global::System.String providerUserId, global::System.Int32 userId)
        {
            webpages_OAuthMembership webpages_OAuthMembership = new webpages_OAuthMembership();
            webpages_OAuthMembership.Provider = provider;
            webpages_OAuthMembership.ProviderUserId = providerUserId;
            webpages_OAuthMembership.UserId = userId;
            return webpages_OAuthMembership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provider
        {
            get
            {
                return _Provider;
            }
            set
            {
                if (_Provider != value)
                {
                    OnProviderChanging(value);
                    ReportPropertyChanging("Provider");
                    _Provider = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Provider");
                    OnProviderChanged();
                }
            }
        }
        private global::System.String _Provider;
        partial void OnProviderChanging(global::System.String value);
        partial void OnProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderUserId
        {
            get
            {
                return _ProviderUserId;
            }
            set
            {
                if (_ProviderUserId != value)
                {
                    OnProviderUserIdChanging(value);
                    ReportPropertyChanging("ProviderUserId");
                    _ProviderUserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProviderUserId");
                    OnProviderUserIdChanged();
                }
            }
        }
        private global::System.String _ProviderUserId;
        partial void OnProviderUserIdChanging(global::System.String value);
        partial void OnProviderUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="webpages_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_Roles object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static webpages_Roles Createwebpages_Roles(global::System.Int32 roleId, global::System.String roleName)
        {
            webpages_Roles webpages_Roles = new webpages_Roles();
            webpages_Roles.RoleId = roleId;
            webpages_Roles.RoleName = roleName;
            return webpages_Roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "fk_RoleId", "webpages_UsersInRoles")]
        public EntityCollection<webpages_UsersInRoles> webpages_UsersInRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<webpages_UsersInRoles>("Offwind.DbModels.fk_RoleId", "webpages_UsersInRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<webpages_UsersInRoles>("Offwind.DbModels.fk_RoleId", "webpages_UsersInRoles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="webpages_UsersInRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_UsersInRoles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_UsersInRoles object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static webpages_UsersInRoles Createwebpages_UsersInRoles(global::System.Int32 userId, global::System.Int32 roleId)
        {
            webpages_UsersInRoles webpages_UsersInRoles = new webpages_UsersInRoles();
            webpages_UsersInRoles.UserId = userId;
            webpages_UsersInRoles.RoleId = roleId;
            return webpages_UsersInRoles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DUserProfile_UsersInRoles", "DUserProfile")]
        public DUserProfile DUserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_UsersInRoles", "DUserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_UsersInRoles", "DUserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DUserProfile> DUserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_UsersInRoles", "DUserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_UsersInRoles", "DUserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "fk_RoleId", "webpages_Roles")]
        public webpages_Roles webpages_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_Roles>("Offwind.DbModels.fk_RoleId", "webpages_Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_Roles>("Offwind.DbModels.fk_RoleId", "webpages_Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<webpages_Roles> webpages_RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_Roles>("Offwind.DbModels.fk_RoleId", "webpages_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<webpages_Roles>("Offwind.DbModels.fk_RoleId", "webpages_Roles", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
