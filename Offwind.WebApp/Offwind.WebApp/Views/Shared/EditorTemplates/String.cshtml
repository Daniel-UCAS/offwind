@model object
@{
    var fieldName = ViewData.TemplateInfo.HtmlFieldPrefix;
    var displayName = ViewData.ModelMetadata.DisplayName ?? ViewData.TemplateInfo.HtmlFieldPrefix;
    var description = ViewData.ModelMetadata.Description;
    var htmlAttributes = new Dictionary<string, object>();
    htmlAttributes["class"] = "span6";
    //htmlAttributes["autocomplete"] = "email";
}
<div class="control-group" id="@("EditorFor_" + fieldName)">
    <label class="control-label" for="@fieldName">@displayName
        @if (description != null && description.Trim().Length > 0)
        {
            <i class="icon-question-sign tip-right" title="@description"></i>
        }
    </label>
    <div class="controls controls-row">
    @if (Model is Enum)
    {
        var enumType = Model.GetType();
        if (ViewData.ModelMetadata.IsReadOnly)
        {
            Output.Write("<select class=\"span6\" disabled=\"\" id=\"{0}\" name=\"{0}\">", fieldName);
        }
        else
        {
            Output.Write("<select class=\"span6\" id=\"{0}\" name=\"{0}\">", fieldName);
        }
        foreach (var t in Enum.GetNames(enumType))
        {
            if (t == Model.ToString())
            {
                <option value="@t" selected="@t">@t</option>
            }
            else
            {
                <option value="@t">@t</option>
            }
        }
        Output.Write("</select>");
    }
    else
    {
        @Html.TextBox("", Model, htmlAttributes)
    }

        <div class="validation-msg span6">@Html.ValidationMessage("")</div>
    </div>
</div>
