@using Offwind.WebApp.Infrastructure
@using Offwind.WebApp.Areas.EngineeringTools.Models
@using Offwind.WebApp.Areas.EngineeringTools.Models.WakeSimulation2New
@model Offwind.WebApp.Areas.EngineeringTools.Models.WakeSimulation2New.VGeneralProperties

<ul class="breadcrumb">
    <li><a href="@Url.Action("Index", "Home", new { area = "" })"><i class="icon-home"></i></a> <span class="divider">/</span></li>
    <li><a href="@Url.Action("Index", "EngineeringTools", new { area = "EngineeringTools" })">Engineering Tools</a> <span class="divider">/</span></li>
    <li>Wind Farm Control</li>
</ul>

<div id="alert-saved"  class="alert alert-success hidden" style="width: 10%">
    <a class="close" data-dismiss="alert">×</a>
    Saved
</div>
<div class="row-fluid row-content-block">
    <div class="span12 well">
        
        <form class="form-horizontal" method="post">
        <div class="fancy-tab-container">
            <ul class="nav nav-tabs fancy">
                <li class="active"><a href="#result-1" data-toggle="tab">General</a></li>
                <li><a href="#result-2" data-toggle="tab">Options</a></li>
                <li><a href="#result-3" data-toggle="tab">Simulation</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="result-1">
                    <br />
                    <fieldset>
                        <div class="control-group">
                            <label class="control-label">Select Wind Farm</label>
                            <div class="controls">
                                <select class="input-xlarge" id="windfarmsel" onchange="windfarm_change();"></select>
                                <a href="@Url.Action("WindFarmInfo", "WakeSimulation2New", new { area = "EngineeringTools" })" class="btn btn-info">View details</a>
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="tab-pane" id="result-2">
                    <br/>
                    <fieldset>
                        @Html.EditorFor(m => m.EnablePowerDistribution)
                        @Html.EditorFor(m => m.EnableTurbineDynamics)
                        @Html.EditorFor(m => m.PowerRefInterpolation)
                        @Html.EditorFor(m => m.EnableVaryingDemand)
                    </fieldset>
                </div>
                <div class="tab-pane" id="result-3">
                    <br/>
                    <fieldset>
                        @Html.EditorFor(m => m.StopTime)
                        @Html.EditorFor(m => m.TimeStep)
                        @Html.EditorFor(m => m.ControlUpdateInterval)
                        @Html.EditorFor(m => m.PowerUpdateInterval)
                        @Html.EditorFor(m => m.InitialPowerDemand)
                    </fieldset>
                </div>

            </div>
        </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Run</button>
                <button type="button" class="btn">Cancel</button>
            </div>
        </form>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/static/Highcharts-3.0.4/highcharts.js")

    <script type="text/javascript">
        $(document).ready(function () {
            $('#TimeStep').attr('readonly', 'readonly').attr('disabled', 'disabled');
    @{
        var elementsTooltips = new System.Collections.Generic.Dictionary<string, string>();
        try
        {
            Helper.RegisterModelPropertyEditorTooltip<VGeneralProperties>(m => m.EnablePowerDistribution, elementsTooltips);
            Helper.RegisterModelPropertyEditorTooltip<VGeneralProperties>(m => m.EnableTurbineDynamics, elementsTooltips);
            Helper.RegisterModelPropertyEditorTooltip<VGeneralProperties>(m => m.PowerRefInterpolation, elementsTooltips);
            Helper.RegisterModelPropertyEditorTooltip<VGeneralProperties>(m => m.EnableVaryingDemand, elementsTooltips);
            Helper.RegisterModelPropertyEditorTooltip<VGeneralProperties>(m => m.StopTime, elementsTooltips);
            Helper.RegisterModelPropertyEditorTooltip<VGeneralProperties>(m => m.TimeStep, elementsTooltips);
            Helper.RegisterModelPropertyEditorTooltip<VGeneralProperties>(m => m.ControlUpdateInterval, elementsTooltips);
            Helper.RegisterModelPropertyEditorTooltip<VGeneralProperties>(m => m.PowerUpdateInterval, elementsTooltips);
            Helper.RegisterModelPropertyEditorTooltip<VGeneralProperties>(m => m.InitialPowerDemand, elementsTooltips);
        }
        catch
        {
        }

        foreach (var modelPropertyName in elementsTooltips.Keys)
        {
            var modelPropertyDescription = elementsTooltips[modelPropertyName];
            Output.WriteLine("\t\t$('#{0}, label[for=\"{0}\"]').attr('Title', '{1}');", modelPropertyName, modelPropertyDescription);
        }
    }
            $.ajax({
                url: "@Url.Action("GetAvailWinFarms", "WakeSimulation2New", new { area = "EngineeringTools" })",
                dataType: 'json',
                type: 'GET',
                success: function (res) {
                    var lbox = document.getElementById("windfarmsel");
                    for (var i = 0; i < res.length - 1; i++) {
                        var opt = document.createElement("option");
                        //opt.label = res[i];
                        var optLabel = res[i];
                        opt.text = optLabel;
                        opt.label = optLabel;
                        lbox.appendChild(opt);
                    }
                    lbox.selectedIndex = parseInt(res[i]);
                    windfarm_change();
                }
            });
        });

        function windfarm_change() {
            var list = document.getElementById("windfarmsel");
            var url = "/EngineeringTools/WakeSimulation2New/WindFarmSelected/" + list.selectedIndex;
            $.ajax({
                url: url,
                dataType: 'json',
                type: 'POST',
                success: function () {
                }
            });
        };

    </script>
}
