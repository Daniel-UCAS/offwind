@using Offwind.WebApp.Areas.EngineeringTools.Models.MesoWind
@model DbSettings

<style>
    #map_container
    {
        padding: 4px;
    }
</style>
<ul class="breadcrumb">
    <li><a href="@Url.Action("Index", "Home", new { area = "" })"><i class="icon-home"></i></a> <span class="divider">/</span></li>
    <li><a href="@Url.Action("Index", "EngineeringTools", new { area = "EngineeringTools" })">Engineering Tools</a> <span class="divider">/</span></li>
    <li>Meso Wind <span class="divider">/</span></li>
    <li>Database</li>
</ul>

<div class="row-fluid">
    <div class="span9">
        <div class="row-fluid">
            <div class="block">
                @*<div class="block-heading">
                    Map search
                </div>*@
                <div id="map_container">
                    <div id="map_canvas" style="width: auto; height: 410px;"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="span3">
        <div class="well">
            <a href="#show_db" role="button" class="btn btn-block" data-toggle="modal"><i class="icon-table"></i> Show data</a>
            <a href="#show_settings" role="button" class="btn btn-block" data-toggle="modal"><i class="icon-search"></i>Search</a>
        </div>
    </div>
</div>

<div id="show_settings" class="modal hide fade">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>Search</h3>
    </div>
    <div class="modal-body">
        <form class="form-horizontal indent" method="post">
            @Html.EditorFor(m => m.showAll)
            @Html.EditorFor(m => m.startLng)
            @Html.EditorFor(m => m.startLat)
            @Html.EditorFor(m => m.distance)
            <div style="text-align: center">
            </div>
        </form>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="do_search">Search</button>
    </div>
</div>

<div id="show_db" class="modal hide fade">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>Data</h3>
    </div>
    <div class="modal-body">
        @Html.EditorFor(m => m.type)
        <table id="database" class="table table-condensed table-hover table-bordered">
            <thead>
                <tr>
                    <th>
                        Lat. (&#176;)
                    </th>
                    <th>
                        Lng. (&#176;)
                    </th>
                    <th>File</th>
                </tr>
            </thead>
        </table>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="do_import">Import Selected</button>
    </div>
</div>
@section scripts
{
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
    <script type="text/javascript" charset="utf8" src="http://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="../../../../static/js/markerclusterer.js"></script>

    @Scripts.Render("~/static/js/jquery.dataTables.Pagination.js")
    <script language="javascript">
        var map;
        var dbTable = null;
        var clusters = null;
        var dbMarker;
        var dbHoverMarker;
        var centerPoint = new google.maps.LatLng(11, 50);
        var dburl = "@Url.Action("GetDatabasePoints", "MesoWind", new { are = "EngineeringTools" })";

        var image = new google.maps.MarkerImage(
            '@Url.Content("~/static/img/marker.png")',
            new google.maps.Size(50, 60),
            new google.maps.Point(0, 0),
            new google.maps.Point(25, 60)
        );

        var shadow = new google.maps.MarkerImage(
            '@Url.Content("~/static/img/marker-shadow.png")',
            new google.maps.Size(84, 60),
            new google.maps.Point(0, 0),
            new google.maps.Point(25, 60)
        );

        var shape = { coord: [22, 0, 23, 1, 23, 2, 23, 3, 23, 4, 23, 5,
            23, 6, 23, 7, 23, 8, 24, 9, 24, 10, 24, 11, 24, 12, 24, 13,
            25, 14, 25, 15, 25, 16, 31, 17, 31, 18, 31, 19, 31, 20, 32,
            21, 34, 22, 36, 23, 36, 24, 38, 25, 39, 26, 41, 27, 42, 28,
            37, 29, 37, 30, 38, 31, 39, 32, 40, 33, 41, 34, 39, 35, 39,
            36, 41, 37, 42, 38, 42, 39, 37, 40, 37, 41, 41, 42, 42, 43,
            41, 44, 45, 45, 45, 46, 46, 47, 47, 48, 47, 49, 49, 50, 49,
            51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 49, 58,
            49, 59, 0, 59, 6, 58, 3, 57, 2, 56, 2, 55, 2, 54, 5, 53, 8,
            52, 10, 51, 9, 50, 10, 49, 10, 48, 11, 47, 13, 46, 13, 45, 16,
            44, 18, 43, 20, 42, 20, 41, 20, 40, 20, 39, 20, 38, 20, 37,
            20, 36, 20, 35, 20, 34, 20, 33, 20, 32, 20, 31, 20, 30, 20,
            29, 2, 28, 3, 27, 4, 26, 5, 25, 6, 24, 8, 23, 10, 22, 11, 21,
            13, 20, 14, 19, 14, 18, 19, 17, 18, 16, 19, 15, 19, 14, 19,
            13, 19, 12, 19, 11, 20, 10, 20, 9, 20, 8, 18, 7, 20, 6, 20, 5,
            20, 4, 20, 3, 20, 2, 20, 1, 21, 0, 22, 0], type: 'poly' };

        function createMarker(point, icon) {
            return new google.maps.Marker({
                position: point,
                draggable: true,
                raiseOnDrag: false,
                icon: icon,
                title: 'Sample',
                map: map
            });
        }
        
        function createClusterItem(key, place) {
            var marker = new google.maps.Marker({
                        position: place,
                        draggable: false,
                        title: key
                    });
            marker.setIcon("https://maps.gstatic.com/mapfiles/ms2/micons/yellow-dot.png");
            return marker;
        }
        
        function refreshMap() {
            var data = null;
            $.ajax({
                url: "@Url.Action("GetAllData", "MesoWind", new { area = "EngineeringTools" })",
                dataType: "json",
                data: data
            }).done(function(data) {                
                if (clusters)
                    clusters.clearMarkers();                
                var markers = [];
                
                for (var i = 0; i < data.length; i++)
                {
                	var coord = new google.maps.LatLng(data[i][0], data[i][1]);
                    var m = createClusterItem(data[i][2], coord);
                    markers.push(m);
                }                
                clusters = new MarkerClusterer(map, markers, {
                    maxZoom: 20,
                    gridSize: null,
                    styles: null
                });
            });            
        }
        

        function initializeMap() {
            var mapOptions = {
                zoom: 1,
                minZoom: 1,
                center: centerPoint,
                mapTypeId: google.maps.MapTypeId.SATELLITE
            };
            map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
            
            dbMarker = createMarker(new google.maps.LatLng(0, 0));
            dbMarker.setIcon("https://maps.gstatic.com/mapfiles/ms2/micons/yellow-dot.png");
            dbMarker.visible = false;
            dbMarker.zIndex = 1;

            dbHoverMarker = createMarker(new google.maps.LatLng(0, 0));
            dbHoverMarker.setIcon("https://maps.gstatic.com/mapfiles/ms2/micons/ltblue-dot.png");
            dbHoverMarker.visible = false;
            dbHoverMarker.zIndex = 2;
            
            refreshMap();
        }
        
        function clearClusters(e) {
            e.preventDefault();
            e.stopPropagation();
            clusters.clearMarkers();
      }
        
        /* Get the rows which are currently selected */
        function fnGetSelected(oTableLocal)
        {
            var aReturn = new Array();
            var aTrs = oTableLocal.fnGetNodes();
	
            for ( var i=0 ; i<aTrs.length ; i++ )
            {
                if ( $(aTrs[i]).hasClass('table-row-selected') )
                {
                    aReturn.push( aTrs[i] );
                }
            }
            return aReturn;
        }
        
        $(document).ready(function() {            
            $.extend($.fn.dataTableExt.oStdClasses, {
                "sSortAsc": "header headerSortDown",
                "sSortDesc": "header headerSortUp",
                "sSortable": "header"
            });
            dbTable = $('#database').dataTable({
                "sDom": "tip<'row-fluid'r>",
                //"sDom": "lfrtip",
                "bFilter": false,
                "bProcessing": true,
                "bServerSide": true,
                "sAjaxSource": dburl,
                "sPaginationType": "bootstrap"
            });
            
            initializeMap();

            // Select DB row
            $("#database tbody").click(function(event) {
                $(dbTable.fnSettings().aoData).each(function() {
                    $(this.nTr).removeClass('table-row-selected');
                });
                $(event.target.parentNode).addClass('table-row-selected');

                var row = $(event.target.parentNode);
                var lat = $(row.find("td")[0]).text();
                var lng = $(row.find("td")[1]).text();
                
                var point = new google.maps.LatLng(lat, lng);                
                dbHoverMarker.setPosition(point);
                dbHoverMarker.title = "";
                dbHoverMarker.visible = true;
                map.setCenter(point);
            });
            $('#database tbody')
                .on('mouseenter', 'tr', function() {
                    var lat = $($(this).find('td')[0]).text();
                    var lng = $($(this).find('td')[1]).text();
                    dbHoverMarker.setPosition(new google.maps.LatLng(lat, lng));
                    dbHoverMarker.title = "";
                    dbHoverMarker.visible = true;
                })
                .on('mouseleave', 'tr', function() {
                    dbHoverMarker.visible = false;
                });

            $("#do_import").click(function() {
                var sel = fnGetSelected(dbTable);
                if (sel.length == 0) {
                    return false;
                }
                //var lat = $($(sel[0]).find('td')[0]).text();
                //var lng = $($(sel[0]).find('td')[1]).text();
                var file = $($(sel[0]).find('td')[2]).text();
                $.ajax({
                    url: "@Url.Action("Import", "MesoWind", new { area = "EngineeringTools" })",
                    data: { file: file }
                }).done(function() {
                });
                return false;
            });
        });
    </script>

}
