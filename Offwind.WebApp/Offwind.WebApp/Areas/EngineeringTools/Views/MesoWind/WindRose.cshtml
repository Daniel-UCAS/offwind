@using System.Linq
@using System.Web.Script.Serialization
@model Offwind.WebApp.Areas.EngineeringTools.Models.MesoWind.VWindRose

<ul class="breadcrumb">
    <li><a href="@Url.Action("Index", "Home", new { area = "" })"><i class="icon-home"></i></a> <span class="divider">/</span></li>
    <li><a href="@Url.Action("Index", "EngineeringTools", new { area = "EngineeringTools" })">Engineering Tools</a> <span class="divider">/</span></li>
    <li>Meso Wind <span class="divider">/</span></li>
    <li>Wind Rose</li>
</ul>
<div class="row-fluid">
    <div class="span6 well">
        <div id="frequencyByDir" style="width: 100%; height: 480px;"></div>
    </div>
    <div class="span6 well">
        <div id="meanVelocityByDir" style="width: 100%; height: 480px;"></div>
    </div>
</div>
@section scripts
{
    @Scripts.Render("~/static/js/highcharts.js")
    @Scripts.Render("~/static/js/highcharts-more.js")
    @Scripts.Render("~/static/js/exporting.js")

    <script type="text/javascript">
    @{
        var freqByDirs = Model.FreqByDirs.Select(x => new { direction = x.Dir, value = x.Frequency });
        var meanVelocityByDir = Model.MeanVelocityPerDir.Select(x => new { direction = x.Dir, value = x.Velocity });
     }
        var freqByDir = @(Html.Raw(new JavaScriptSerializer().Serialize(freqByDirs)));
        var meanVelocityByDir = @(Html.Raw(new JavaScriptSerializer().Serialize(meanVelocityByDir)));

        var plotChart = function(data, target, title, name) {
            var chart = new Highcharts.Chart({
                chart: {
                    renderTo: target,
                    polar: true
                },
                title: {
                    text: title
                },
                pane: {
                    startAngle: 0,
                    endAngle: 360
                },
                xAxis: {
                    tickInterval: 45,
                    min: 0,
                    max: 360,
                    labels: {
                        formatter: function() {
                            return this.value + '°';
                        }
                    }
                },
                yAxis: {
                    min: 0
                },
                series: [{ type: 'area', name: name }]
            });

            var graph = [];
            for (var i = 0; i < data.length; i++ ) {
                graph.push({ x: data[i].direction, y: data[i].value});
            }
            chart.series[0].setData(graph);
        };

        plotChart(freqByDir, "frequencyByDir", "Frequency by direction, %", "Frequency");
        plotChart(meanVelocityByDir, "meanVelocityByDir", "Mean velocity by direction, m/s", "Velocity");
    </script>
}
