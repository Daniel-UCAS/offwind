@using Offwind.WebApp.Infrastructure
@model Offwind.WebApp.Areas.WindFarms.Models.VWindFarm

@{
    ViewBag.Title = "Wind Farm Editor | Wind Farms & Turbines Database | Offwind";
}

@section styles
{
    @* @Styles.Render("~/static/css/jquery.handsontable.full.css")*@
    <link href="~/static/handsontable-0.10.3/jquery.handsontable.full.css" rel="stylesheet" />
    <link href="~/static/handsontable-0.10.3/extensions/jquery.handsontable.bootstrap.css" rel="stylesheet" />
    <link href="~/static/handsontable-0.10.3/extensions/jquery.handsontable.removeRow.css" rel="stylesheet" />
    <link href="~/Areas/WindFarms/static/css/farm-layout.css" rel="stylesheet" />
    <style>
        table span.indent {
            font-weight: normal;
            margin-left: 1em;
        }

        .handsontable th, .handsontable td {
            min-width: 50px;
        }

        .handsontable td {
            text-align: right;
        }

        .root {
            height: 500px;
            position: relative;
            width: 100%;
        }

        .left {
            float: left;
            width: 480px;
        }

        .right {
            float: left;
            padding-left: 20px;
            width: 40%;
        }
    </style>
}
<ul class="breadcrumb">
    <li><a href="@Url.Action("Index", "Home", new { area = "" })"><i class="icon-home"></i></a><span class="divider">/</span></li>
    <li><a href="@Url.Action("Index", "HomeWindFarms", new { area = "WindFarms" })">Wind Farms & Turbines Database</a> <span class="divider">/</span></li>
    <li><a href="@Url.Action("List", "WindFarm", new { area = "WindFarms" })">Wind Farms</a> <span class="divider">/</span></li>
    <li class="active">Wind Farm Details</li>
</ul>
<div class="row-fluid row-content-block">
    <div class="span12 well actionable-page">
        <h1>Wind Farm Details</h1>
        @Html.Partial("__DetailsActions")
        <div class="row-fluid">
            <div class="span6">
                <h3>Properties</h3>
                <p>
                    <table class="table table-bordered general-params model-view">
                        @Html.DisplayFor(m => m.Name)
                        @Html.DisplayFor(m => m.Country)
                        @Html.DisplayFor(m => m.TotalCapacity)
                        <tr>
                            <td>Coordinates<br />
                                <span class="indent">Latitude</span><br />
                                <span class="indent">Longitude</span>
                            </td>
                            <td>
                                <br />
                                @Model.GeoLat<br />@Model.GeoLng
                            </td>
                        </tr>
                        @if (Model.HasLinks())
                        {
                            <tr>
                                <td>Links</td>
                                <td>
                                    @if (Model.HasOfficialLink())
                                    {
                                        <a href="@Model.UrlOfficial.AnchorUrl()" rel="nofollow" target="_blank">Official site</a><br />
                                    }

                                    @if (Model.HasWikiLink())
                                    {
                                        <a href="@Model.UrlPublicWiki.AnchorUrl()" rel="nofollow" target="_blank">Wikipedia</a>
                                    }
                                </td>
                            </tr>
                        }
                    </table>
                </p>
            </div>
            <div class="span6">
                <h3>Location</h3>
                <div id="map_container" class="img-polaroid">
                    <div id="map_canvas" style="width: auto; height: 300px;"></div>
                </div>
            </div>
        </div>

        <h3>Description</h3>
        @if (Model.Description == null || Model.Description.Trim().Length <= 0)
        {
            <div class="alert">
                No description specified
            </div>
        }
        else
        {
            @Html.Raw(Model.Description)
        }
    </div>
</div>
<div class="row-fluid row-content-block">
    <div class="span12 well actionable-page">
        <h3>Turbines Layout</h3>
        @Html.Partial("__LayoutActions")
        <div class="root">
            <div class="left">
                <svg id="layout" style="width: 500px; height: 500px"></svg>
            </div>
            <div class="right">
                <div id="dataTable" class="handsontable" style="height: 500px; overflow: auto"></div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="/static/js/standard/jquery.validate.js"></script>

    <script src="~/static/handsontable-0.10.3/jquery.handsontable.full.js"></script>
    <script src="~/static/svg/lightSVG.js"></script>
    <script src="~/Areas/WindFarms/static/js/farm-layout.js"></script>
    <script src="~/Areas/WindFarms/static/js/turbines.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
    <script type="text/javascript">
        $(document).ready(function() {
            (function() {
                var map;
                var coord = new google.maps.LatLng(@Model.GeoLat, @Model.GeoLng);
                var mapOptions = {
                    zoom: 10,
                    minZoom: 1,
                    center: coord,
                    mapTypeId: google.maps.MapTypeId.SATELLITE
                };

                map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);

                var point = new google.maps.Marker({
                    position: coord,
                    draggable: false,
                    raiseOnDrag: false,
                    title: name,
                    map: map
                });
                point.setIcon("https://maps.gstatic.com/mapfiles/ms2/micons/yellow-dot.png");
                point.visible = true;
                

            })();
        });
        var canEdit;
        @if (Model.CanEdit)
        {
            <text>
        canEdit = '@Model.CanEdit';
            </text>
        }

        var TurbineCoordinatesSaveURl = "@Url.Action("TurbineCoordinatesSave", "WindFarm", new { area = "WindFarms", windFarmId = Model.Id })";
        var isInitialized = false;
        var changed = function() {
            if (!isInitialized) return;
            var data = $("#dataTable").handsontable('getData');
            var res = [];
            data.forEach(function(entry) {
                res.push([entry.get('index'), entry.get('x'), entry.get('y')]);
            });
            $.ajax({
                url: TurbineCoordinatesSaveURl,
                dataType: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(res)
            });
        };

        (function() {

            $.ajax({
                url: "@Url.Action("TurbineCoordinatesData", "WindFarm", new { area = "WindFarms", windFarmId = Model.Id })",
                dataType: 'json',
                type: 'GET',
                success: function(res) {
                    var options = {
                        data: res,
                        onchanged: changed,
                        readOnly: !canEdit
                    };
                    initTurbines(options);
                    isInitialized = true;
                }
            });

        })();
    </script>
}
