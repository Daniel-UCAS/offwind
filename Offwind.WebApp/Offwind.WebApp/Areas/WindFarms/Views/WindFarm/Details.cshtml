@using Offwind.WebApp.Infrastructure
@model Offwind.WebApp.Areas.WindFarms.Models.VWindFarm

@{
    ViewBag.Title = "Wind Farm Editor | Wind Farms & Turbines Database | Offwind";
}

@section styles
{
    @* @Styles.Render("~/static/css/jquery.handsontable.full.css")*@
    <link href="~/static/handsontable-0.10.3/jquery.handsontable.full.css" rel="stylesheet" />
    <link href="~/static/handsontable-0.10.3/extensions/jquery.handsontable.bootstrap.css" rel="stylesheet" />
    <link href="~/static/handsontable-0.10.3/extensions/jquery.handsontable.removeRow.css" rel="stylesheet" />
    
    <style>
        table span.indent
        {
            margin-left: 1em;
            font-weight: normal;
        }

        .handsontable .currentRow { background-color: #E7E8EF; }

        .handsontable .currentCol { background-color: #F9F9FB; }
        .handsontable th, .handsontable td {
            min-width: 50px;
        }
        .handsontable td {
            text-align: right;
        }
    </style>
}
<ul class="breadcrumb">
    <li><a href="@Url.Action("Index", "Home", new { area = "" })"><i class="icon-home"></i></a> <span class="divider">/</span></li>
    <li><a href="@Url.Action("Index", "HomeWindFarms", new { area = "WindFarms" })">Wind Farms & Turbines Database</a> <span class="divider">/</span></li>
    <li><a href="@Url.Action("List", "WindFarm", new { area = "WindFarms" })">Wind Farms</a> <span class="divider">/</span></li>
    <li class="active">Wind Farm Details</li>
</ul>
<div class="row-fluid row-content-block">
    <div class="span12 well actionable-page">
        <h1>Wind Farm Details</h1>
        @Html.Partial("__DetailsActions")
        <div class="row-fluid">
            <div class="span6">
                <h3>Properties</h3>
                <p>
                    <table class="table table-bordered general-params model-view">
                        @Html.DisplayFor(m => m.Name)
                        @Html.DisplayFor(m => m.Country)
                        @Html.DisplayFor(m => m.TotalCapacity)
                        <tr>
                            <td>Coordinates<br/>
                                <span class="indent">Latitude</span><br/>
                                <span class="indent">Longitude</span>
                            </td>
                            <td><br/>
                                @Model.GeoLat<br/>@Model.GeoLng
                            </td>
                        </tr>
                        @if (Model.HasLinks())
                        {
                            <tr>
                                <td>Links</td>
                                <td>
                                    @if (Model.HasOfficialLink())
                                    {
                                        <a href="@Model.UrlOfficial.AnchorUrl()" rel="nofollow" target="_blank">Official site</a><br/>
                                    }

                                    @if (Model.HasWikiLink())
                                    {
                                        <a href="@Model.UrlPublicWiki.AnchorUrl()" rel="nofollow" target="_blank">Wikipedia</a>
                                    }
                                </td>
                            </tr>
                        }
                    </table>
                </p>
            </div>
            <div class="span6">
                <h3>Location</h3>
                <div id="map_container" class="img-polaroid">
                    <div id="map_canvas" style="width: auto; height: 300px;"></div>
                </div>
            </div>
        </div>

        <h3>Description</h3>
        @if (Model.Description == null || Model.Description.Trim().Length <= 0)
        {
            <div class="alert">
                No description specified
            </div>
        }
        else
        {
            @Html.Raw(Model.Description)
        }
    </div>
</div>
<div class="row-fluid row-content-block">
    <div class="span12 well actionable-page">
        <h3>Turbines Layout</h3>
        <div class="actions-block">
            @if (Model.CanEdit)
            {
                <a class="btn btn-primary" role="button" data-toggle="modal"  href="#action_upload_turbines" title="Upload turbines" id="action-upload-turbines">
                    <i class="icon-upload-alt icon-white"></i>
                </a>
                <a class="btn btn-danger"  role="button" data-toggle="modal"  href="#action_remove_turbines" title="Remove all turbines" id="action-remove-turbines">
                    <i class="icon-remove icon-white"></i>
                </a>
            }
        </div>
            @if (!Model.CanEdit && Model.Turbines.Count <= 0)
            {
                <div class="alert">
                    No turbine coordinates specified
                </div>
            }
            else
            {
                <div id="example1"></div>
            }
    </div>
</div>

@section scripts
{
    <script src="/static/js/standard/jquery.validate.js"></script>
    @*    @Scripts.Render("~/static/js/jquery.handsontable.full.js")*@
    @*@Scripts.Render("~/static/js/handsontable.tools.js")*@
    <script src="~/static/handsontable-0.10.3/jquery.handsontable.full.js"></script>
    
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
    <script type="text/javascript">
        $(document).ready(function() {
            (function() {
                var map;
                var coord = new google.maps.LatLng(@Model.GeoLat, @Model.GeoLng);
                var mapOptions = {
                    zoom: 10,
                    minZoom: 1,
                    center: coord,
                    mapTypeId: google.maps.MapTypeId.SATELLITE
                };

                map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);

                var point = new google.maps.Marker({
                    position: coord,
                    draggable: false,
                    raiseOnDrag: false,
                    title: name,
                    map: map
                });
                point.setIcon("https://maps.gstatic.com/mapfiles/ms2/micons/yellow-dot.png");
                point.visible = true;
            })();

            (function() {

                @{
                    var spareRows = 1;
                    var columnTypes = "[{ readOnly: false }, { readOnly: false }]";
                    if (!Model.CanEdit)
                    {
                        spareRows = 0;
                        columnTypes = "[{ readOnly: true }, { readOnly: true }]";
                    }
                }

                var isInitialized = false;
                var $container = $("#example1");

                var changed = function() {
                    if (!isInitialized) return;
                    var d = $container.data('handsontable').getData();
                    $.ajax({
                        url: "@Url.Action("TurbineCoordinatesSave", "WindFarm", new {area = "WindFarms", windFarmId = Model.Id})",
                        dataType: "json",
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(d)
                    });
                };

                var resetTurbines = function() {
                    $.ajax({
                        url: "@Url.Action("RemoveAllTurbines", "WindFarm", new {area = "WindFarms", windFarmId = Model.Id})",
                        dataType: "json",
                        type: "POST",
                        contentType: 'application/json; charset=utf-8'
                    });

                    $.ajax({
                        url: "@Url.Action("TurbineCoordinatesData", "WindFarm", new {area = "WindFarms", windFarmId = Model.Id})",
                        dataType: 'json',
                        type: 'GET',
                        success: function(res) {
                            $container.data('handsontable').loadData(res);
                        }
                    });
                };

                $container.handsontable({
                    startRows: 1,
                    startCols: 2,
                    columns: @columnTypes,
                    colHeaders: ["<b>X</b>", "<b>Y</b>"],
                    rowHeaders: true,
                    minSpareRows: @spareRows,
                    onChange: changed,
                    fillHandle: true,
                    outsideClickDeselects: false,
                    autoWrapRow: true,
                });
                $container.find('table').addClass('table table-hover');

                $.ajax({
                    url: "@Url.Action("TurbineCoordinatesData", "WindFarm", new {area = "WindFarms", windFarmId = Model.Id})",
                    dataType: 'json',
                    type: 'GET',
                    success: function(res) {
                        $container.data('handsontable').loadData(res);
                        isInitialized = true;
                    }
                });

                $("#action-remove-turbines").on('click', resetTurbines);


                $("#action-upload-turbines").click(function() {
                    console.log('upload');
                });

            })();
        });
    </script>
}
