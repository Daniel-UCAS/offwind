//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Offwind.DbModels", "FK_DContent_DContentCategory", "DContentCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Offwind.Web.Core.DContentCategory), "DContent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Offwind.Web.Core.DContent), true)]
[assembly: EdmRelationshipAttribute("Offwind.DbModels", "FK_DContent_DContentTypes", "DContentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Offwind.Web.Core.DContentType), "DContent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Offwind.Web.Core.DContent), true)]
[assembly: EdmRelationshipAttribute("Offwind.DbModels", "FK_DMeetingFile_DMeeting", "DMeeting", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Offwind.Web.Core.DMeeting), "DMeetingFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Offwind.Web.Core.DMeetingFile), true)]
[assembly: EdmRelationshipAttribute("Offwind.DbModels", "FK_DMeetingParticipant_DMeeting", "DMeeting", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Offwind.Web.Core.DMeeting), "DMeetingParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Offwind.Web.Core.DMeetingParticipant), true)]
[assembly: EdmRelationshipAttribute("Offwind.DbModels", "FK_DMesoscaleTabFile_DMesoscaleDatabase", "DMesoscaleDatabase", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Offwind.Web.Core.DMesoscaleDatabase), "DMesoscaleTabFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Offwind.Web.Core.DMesoscaleTabFile), true)]
[assembly: EdmRelationshipAttribute("Offwind.DbModels", "FK_DTurbineParameter_DTurbine", "DTurbine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Offwind.Web.Core.DTurbine), "DTurbineParameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Offwind.Web.Core.DTurbineParameter), true)]
[assembly: EdmRelationshipAttribute("Offwind.DbModels", "FK_DUserProfile_webpages_Membership", "webpages_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Offwind.Web.Core.webpages_Membership), "DUserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Offwind.Web.Core.DUserProfile), true)]
[assembly: EdmRelationshipAttribute("Offwind.DbModels", "FK_DWindFarmTurbine_DWindFarm", "DWindFarm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Offwind.Web.Core.DWindFarm), "DWindFarmTurbine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Offwind.Web.Core.DWindFarmTurbine), true)]
[assembly: EdmRelationshipAttribute("Offwind.DbModels", "webpages_UsersInRoles", "DUserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Offwind.Web.Core.DUserProfile), "webpages_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Offwind.Web.Core.webpages_Roles))]

#endregion

namespace Offwind.Web.Core
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OffwindEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OffwindEntities object using the connection string found in the 'OffwindEntities' section of the application configuration file.
        /// </summary>
        public OffwindEntities() : base("name=OffwindEntities", "OffwindEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OffwindEntities object.
        /// </summary>
        public OffwindEntities(string connectionString) : base(connectionString, "OffwindEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OffwindEntities object.
        /// </summary>
        public OffwindEntities(EntityConnection connection) : base(connection, "OffwindEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DCase> DCases
        {
            get
            {
                if ((_DCases == null))
                {
                    _DCases = base.CreateObjectSet<DCase>("DCases");
                }
                return _DCases;
            }
        }
        private ObjectSet<DCase> _DCases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DComment> DComments
        {
            get
            {
                if ((_DComments == null))
                {
                    _DComments = base.CreateObjectSet<DComment>("DComments");
                }
                return _DComments;
            }
        }
        private ObjectSet<DComment> _DComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DContent> DContents
        {
            get
            {
                if ((_DContents == null))
                {
                    _DContents = base.CreateObjectSet<DContent>("DContents");
                }
                return _DContents;
            }
        }
        private ObjectSet<DContent> _DContents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DContentCategory> DContentCategories
        {
            get
            {
                if ((_DContentCategories == null))
                {
                    _DContentCategories = base.CreateObjectSet<DContentCategory>("DContentCategories");
                }
                return _DContentCategories;
            }
        }
        private ObjectSet<DContentCategory> _DContentCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DContentType> DContentTypes
        {
            get
            {
                if ((_DContentTypes == null))
                {
                    _DContentTypes = base.CreateObjectSet<DContentType>("DContentTypes");
                }
                return _DContentTypes;
            }
        }
        private ObjectSet<DContentType> _DContentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DCountry> DCountries
        {
            get
            {
                if ((_DCountries == null))
                {
                    _DCountries = base.CreateObjectSet<DCountry>("DCountries");
                }
                return _DCountries;
            }
        }
        private ObjectSet<DCountry> _DCountries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DEventApplication> DEventApplications
        {
            get
            {
                if ((_DEventApplications == null))
                {
                    _DEventApplications = base.CreateObjectSet<DEventApplication>("DEventApplications");
                }
                return _DEventApplications;
            }
        }
        private ObjectSet<DEventApplication> _DEventApplications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DJob> DJobs
        {
            get
            {
                if ((_DJobs == null))
                {
                    _DJobs = base.CreateObjectSet<DJob>("DJobs");
                }
                return _DJobs;
            }
        }
        private ObjectSet<DJob> _DJobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DMeeting> DMeetings
        {
            get
            {
                if ((_DMeetings == null))
                {
                    _DMeetings = base.CreateObjectSet<DMeeting>("DMeetings");
                }
                return _DMeetings;
            }
        }
        private ObjectSet<DMeeting> _DMeetings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DMeetingFile> DMeetingFiles
        {
            get
            {
                if ((_DMeetingFiles == null))
                {
                    _DMeetingFiles = base.CreateObjectSet<DMeetingFile>("DMeetingFiles");
                }
                return _DMeetingFiles;
            }
        }
        private ObjectSet<DMeetingFile> _DMeetingFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DMeetingParticipant> DMeetingParticipants
        {
            get
            {
                if ((_DMeetingParticipants == null))
                {
                    _DMeetingParticipants = base.CreateObjectSet<DMeetingParticipant>("DMeetingParticipants");
                }
                return _DMeetingParticipants;
            }
        }
        private ObjectSet<DMeetingParticipant> _DMeetingParticipants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DMesoscaleDatabase> DMesoscaleDatabases
        {
            get
            {
                if ((_DMesoscaleDatabases == null))
                {
                    _DMesoscaleDatabases = base.CreateObjectSet<DMesoscaleDatabase>("DMesoscaleDatabases");
                }
                return _DMesoscaleDatabases;
            }
        }
        private ObjectSet<DMesoscaleDatabase> _DMesoscaleDatabases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DMesoscaleTabFile> DMesoscaleTabFiles
        {
            get
            {
                if ((_DMesoscaleTabFiles == null))
                {
                    _DMesoscaleTabFiles = base.CreateObjectSet<DMesoscaleTabFile>("DMesoscaleTabFiles");
                }
                return _DMesoscaleTabFiles;
            }
        }
        private ObjectSet<DMesoscaleTabFile> _DMesoscaleTabFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DProperty> DProperties
        {
            get
            {
                if ((_DProperties == null))
                {
                    _DProperties = base.CreateObjectSet<DProperty>("DProperties");
                }
                return _DProperties;
            }
        }
        private ObjectSet<DProperty> _DProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DTurbine> DTurbines
        {
            get
            {
                if ((_DTurbines == null))
                {
                    _DTurbines = base.CreateObjectSet<DTurbine>("DTurbines");
                }
                return _DTurbines;
            }
        }
        private ObjectSet<DTurbine> _DTurbines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DTurbineParameter> DTurbineParameters
        {
            get
            {
                if ((_DTurbineParameters == null))
                {
                    _DTurbineParameters = base.CreateObjectSet<DTurbineParameter>("DTurbineParameters");
                }
                return _DTurbineParameters;
            }
        }
        private ObjectSet<DTurbineParameter> _DTurbineParameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DUserProfile> DUserProfiles
        {
            get
            {
                if ((_DUserProfiles == null))
                {
                    _DUserProfiles = base.CreateObjectSet<DUserProfile>("DUserProfiles");
                }
                return _DUserProfiles;
            }
        }
        private ObjectSet<DUserProfile> _DUserProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DWindFarm> DWindFarms
        {
            get
            {
                if ((_DWindFarms == null))
                {
                    _DWindFarms = base.CreateObjectSet<DWindFarm>("DWindFarms");
                }
                return _DWindFarms;
            }
        }
        private ObjectSet<DWindFarm> _DWindFarms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DWindFarmTurbine> DWindFarmTurbines
        {
            get
            {
                if ((_DWindFarmTurbines == null))
                {
                    _DWindFarmTurbines = base.CreateObjectSet<DWindFarmTurbine>("DWindFarmTurbines");
                }
                return _DWindFarmTurbines;
            }
        }
        private ObjectSet<DWindFarmTurbine> _DWindFarmTurbines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Page> Pages
        {
            get
            {
                if ((_Pages == null))
                {
                    _Pages = base.CreateObjectSet<Page>("Pages");
                }
                return _Pages;
            }
        }
        private ObjectSet<Page> _Pages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_Membership> webpages_Membership
        {
            get
            {
                if ((_webpages_Membership == null))
                {
                    _webpages_Membership = base.CreateObjectSet<webpages_Membership>("webpages_Membership");
                }
                return _webpages_Membership;
            }
        }
        private ObjectSet<webpages_Membership> _webpages_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_OAuthMembership> webpages_OAuthMembership
        {
            get
            {
                if ((_webpages_OAuthMembership == null))
                {
                    _webpages_OAuthMembership = base.CreateObjectSet<webpages_OAuthMembership>("webpages_OAuthMembership");
                }
                return _webpages_OAuthMembership;
            }
        }
        private ObjectSet<webpages_OAuthMembership> _webpages_OAuthMembership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_Roles> webpages_Roles
        {
            get
            {
                if ((_webpages_Roles == null))
                {
                    _webpages_Roles = base.CreateObjectSet<webpages_Roles>("webpages_Roles");
                }
                return _webpages_Roles;
            }
        }
        private ObjectSet<webpages_Roles> _webpages_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VPartner> VPartners
        {
            get
            {
                if ((_VPartners == null))
                {
                    _VPartners = base.CreateObjectSet<VPartner>("VPartners");
                }
                return _VPartners;
            }
        }
        private ObjectSet<VPartner> _VPartners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VRouteItem> VRouteItems
        {
            get
            {
                if ((_VRouteItems == null))
                {
                    _VRouteItems = base.CreateObjectSet<VRouteItem>("VRouteItems");
                }
                return _VRouteItems;
            }
        }
        private ObjectSet<VRouteItem> _VRouteItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VSmallMesoscaleTabFile> VSmallMesoscaleTabFiles
        {
            get
            {
                if ((_VSmallMesoscaleTabFiles == null))
                {
                    _VSmallMesoscaleTabFiles = base.CreateObjectSet<VSmallMesoscaleTabFile>("VSmallMesoscaleTabFiles");
                }
                return _VSmallMesoscaleTabFiles;
            }
        }
        private ObjectSet<VSmallMesoscaleTabFile> _VSmallMesoscaleTabFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VUserRole> VUserRoles
        {
            get
            {
                if ((_VUserRoles == null))
                {
                    _VUserRoles = base.CreateObjectSet<VUserRole>("VUserRoles");
                }
                return _VUserRoles;
            }
        }
        private ObjectSet<VUserRole> _VUserRoles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DCases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDCases(DCase dCase)
        {
            base.AddObject("DCases", dCase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDComments(DComment dComment)
        {
            base.AddObject("DComments", dComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDContents(DContent dContent)
        {
            base.AddObject("DContents", dContent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DContentCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDContentCategories(DContentCategory dContentCategory)
        {
            base.AddObject("DContentCategories", dContentCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DContentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDContentTypes(DContentType dContentType)
        {
            base.AddObject("DContentTypes", dContentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DCountries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDCountries(DCountry dCountry)
        {
            base.AddObject("DCountries", dCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DEventApplications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDEventApplications(DEventApplication dEventApplication)
        {
            base.AddObject("DEventApplications", dEventApplication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DJobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDJobs(DJob dJob)
        {
            base.AddObject("DJobs", dJob);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DMeetings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDMeetings(DMeeting dMeeting)
        {
            base.AddObject("DMeetings", dMeeting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DMeetingFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDMeetingFiles(DMeetingFile dMeetingFile)
        {
            base.AddObject("DMeetingFiles", dMeetingFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DMeetingParticipants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDMeetingParticipants(DMeetingParticipant dMeetingParticipant)
        {
            base.AddObject("DMeetingParticipants", dMeetingParticipant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DMesoscaleDatabases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDMesoscaleDatabases(DMesoscaleDatabase dMesoscaleDatabase)
        {
            base.AddObject("DMesoscaleDatabases", dMesoscaleDatabase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DMesoscaleTabFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDMesoscaleTabFiles(DMesoscaleTabFile dMesoscaleTabFile)
        {
            base.AddObject("DMesoscaleTabFiles", dMesoscaleTabFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDProperties(DProperty dProperty)
        {
            base.AddObject("DProperties", dProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DTurbines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDTurbines(DTurbine dTurbine)
        {
            base.AddObject("DTurbines", dTurbine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DTurbineParameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDTurbineParameters(DTurbineParameter dTurbineParameter)
        {
            base.AddObject("DTurbineParameters", dTurbineParameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DUserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDUserProfiles(DUserProfile dUserProfile)
        {
            base.AddObject("DUserProfiles", dUserProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DWindFarms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDWindFarms(DWindFarm dWindFarm)
        {
            base.AddObject("DWindFarms", dWindFarm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DWindFarmTurbines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDWindFarmTurbines(DWindFarmTurbine dWindFarmTurbine)
        {
            base.AddObject("DWindFarmTurbines", dWindFarmTurbine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPages(Page page)
        {
            base.AddObject("Pages", page);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_Membership(webpages_Membership webpages_Membership)
        {
            base.AddObject("webpages_Membership", webpages_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_OAuthMembership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_OAuthMembership(webpages_OAuthMembership webpages_OAuthMembership)
        {
            base.AddObject("webpages_OAuthMembership", webpages_OAuthMembership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_Roles(webpages_Roles webpages_Roles)
        {
            base.AddObject("webpages_Roles", webpages_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VPartners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVPartners(VPartner vPartner)
        {
            base.AddObject("VPartners", vPartner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VRouteItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVRouteItems(VRouteItem vRouteItem)
        {
            base.AddObject("VRouteItems", vRouteItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VSmallMesoscaleTabFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVSmallMesoscaleTabFiles(VSmallMesoscaleTabFile vSmallMesoscaleTabFile)
        {
            base.AddObject("VSmallMesoscaleTabFiles", vSmallMesoscaleTabFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VUserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVUserRoles(VUserRole vUserRole)
        {
            base.AddObject("VUserRoles", vUserRole);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="windFarmId">No Metadata Documentation available.</param>
        public int WindFarm_DeleteTurbines(Nullable<global::System.Guid> windFarmId)
        {
            ObjectParameter windFarmIdParameter;
            if (windFarmId.HasValue)
            {
                windFarmIdParameter = new ObjectParameter("windFarmId", windFarmId);
            }
            else
            {
                windFarmIdParameter = new ObjectParameter("windFarmId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("WindFarm_DeleteTurbines", windFarmIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_alterdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="version">No Metadata Documentation available.</param>
        /// <param name="definition">No Metadata Documentation available.</param>
        public int sp_creatediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public int sp_dropdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        public ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="diagramname">No Metadata Documentation available.</param>
        /// <param name="owner_id">No Metadata Documentation available.</param>
        /// <param name="new_diagramname">No Metadata Documentation available.</param>
        public int sp_renamediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int sp_upgraddiagrams()
        {
            return base.ExecuteFunction("sp_upgraddiagrams");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="windFarmId">No Metadata Documentation available.</param>
        public int WindFarm_DeleteTurbines1(Nullable<global::System.Guid> windFarmId)
        {
            ObjectParameter windFarmIdParameter;
            if (windFarmId.HasValue)
            {
                windFarmIdParameter = new ObjectParameter("windFarmId", windFarmId);
            }
            else
            {
                windFarmIdParameter = new ObjectParameter("windFarmId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("WindFarm_DeleteTurbines1", windFarmIdParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DCase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DCase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DCase object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        public static DCase CreateDCase(global::System.Guid id, global::System.DateTime created, global::System.String owner, global::System.String name, global::System.String model)
        {
            DCase dCase = new DCase();
            dCase.Id = id;
            dCase.Created = created;
            dCase.Owner = owner;
            dCase.Name = name;
            dCase.Model = model;
            return dCase;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CurrentJobId
        {
            get
            {
                return _CurrentJobId;
            }
            set
            {
                OnCurrentJobIdChanging(value);
                ReportPropertyChanging("CurrentJobId");
                _CurrentJobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentJobId");
                OnCurrentJobIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CurrentJobId;
        partial void OnCurrentJobIdChanging(Nullable<global::System.Guid> value);
        partial void OnCurrentJobIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DComment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="author">Initial value of the Author property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static DComment CreateDComment(global::System.Guid id, global::System.DateTime created, global::System.String author, global::System.String text)
        {
            DComment dComment = new DComment();
            dComment.Id = id;
            dComment.Created = created;
            dComment.Author = author;
            dComment.Text = text;
            return dComment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ObjectUid
        {
            get
            {
                return _ObjectUid;
            }
            set
            {
                OnObjectUidChanging(value);
                ReportPropertyChanging("ObjectUid");
                _ObjectUid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectUid");
                OnObjectUidChanged();
            }
        }
        private Nullable<global::System.Guid> _ObjectUid;
        partial void OnObjectUidChanging(Nullable<global::System.Guid> value);
        partial void OnObjectUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DContent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DContent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="route">Initial value of the Route property.</param>
        /// <param name="browserTitle">Initial value of the BrowserTitle property.</param>
        /// <param name="metaDescription">Initial value of the MetaDescription property.</param>
        /// <param name="metaKeywords">Initial value of the MetaKeywords property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="announce">Initial value of the Announce property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        /// <param name="publishDate">Initial value of the PublishDate property.</param>
        /// <param name="expirationDate">Initial value of the ExpirationDate property.</param>
        /// <param name="isPublished">Initial value of the IsPublished property.</param>
        public static DContent CreateDContent(global::System.Guid id, global::System.String typeId, global::System.String route, global::System.String browserTitle, global::System.String metaDescription, global::System.String metaKeywords, global::System.String name, global::System.String title, global::System.String announce, global::System.String content, global::System.DateTime created, global::System.DateTime updated, global::System.DateTime publishDate, global::System.DateTime expirationDate, global::System.Boolean isPublished)
        {
            DContent dContent = new DContent();
            dContent.Id = id;
            dContent.TypeId = typeId;
            dContent.Route = route;
            dContent.BrowserTitle = browserTitle;
            dContent.MetaDescription = metaDescription;
            dContent.MetaKeywords = metaKeywords;
            dContent.Name = name;
            dContent.Title = title;
            dContent.Announce = announce;
            dContent.Content = content;
            dContent.Created = created;
            dContent.Updated = updated;
            dContent.PublishDate = publishDate;
            dContent.ExpirationDate = expirationDate;
            dContent.IsPublished = isPublished;
            return dContent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.String _TypeId;
        partial void OnTypeIdChanging(global::System.String value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Guid> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RouteTitle
        {
            get
            {
                return _RouteTitle;
            }
            set
            {
                OnRouteTitleChanging(value);
                ReportPropertyChanging("RouteTitle");
                _RouteTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RouteTitle");
                OnRouteTitleChanged();
            }
        }
        private global::System.String _RouteTitle;
        partial void OnRouteTitleChanging(global::System.String value);
        partial void OnRouteTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Route
        {
            get
            {
                return _Route;
            }
            set
            {
                OnRouteChanging(value);
                ReportPropertyChanging("Route");
                _Route = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Route");
                OnRouteChanged();
            }
        }
        private global::System.String _Route;
        partial void OnRouteChanging(global::System.String value);
        partial void OnRouteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrowserTitle
        {
            get
            {
                return _BrowserTitle;
            }
            set
            {
                OnBrowserTitleChanging(value);
                ReportPropertyChanging("BrowserTitle");
                _BrowserTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrowserTitle");
                OnBrowserTitleChanged();
            }
        }
        private global::System.String _BrowserTitle;
        partial void OnBrowserTitleChanging(global::System.String value);
        partial void OnBrowserTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MetaDescription
        {
            get
            {
                return _MetaDescription;
            }
            set
            {
                OnMetaDescriptionChanging(value);
                ReportPropertyChanging("MetaDescription");
                _MetaDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MetaDescription");
                OnMetaDescriptionChanged();
            }
        }
        private global::System.String _MetaDescription;
        partial void OnMetaDescriptionChanging(global::System.String value);
        partial void OnMetaDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MetaKeywords
        {
            get
            {
                return _MetaKeywords;
            }
            set
            {
                OnMetaKeywordsChanging(value);
                ReportPropertyChanging("MetaKeywords");
                _MetaKeywords = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MetaKeywords");
                OnMetaKeywordsChanged();
            }
        }
        private global::System.String _MetaKeywords;
        partial void OnMetaKeywordsChanging(global::System.String value);
        partial void OnMetaKeywordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Announce
        {
            get
            {
                return _Announce;
            }
            set
            {
                OnAnnounceChanging(value);
                ReportPropertyChanging("Announce");
                _Announce = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Announce");
                OnAnnounceChanged();
            }
        }
        private global::System.String _Announce;
        partial void OnAnnounceChanging(global::System.String value);
        partial void OnAnnounceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PublishDate
        {
            get
            {
                return _PublishDate;
            }
            set
            {
                OnPublishDateChanging(value);
                ReportPropertyChanging("PublishDate");
                _PublishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishDate");
                OnPublishDateChanged();
            }
        }
        private global::System.DateTime _PublishDate;
        partial void OnPublishDateChanging(global::System.DateTime value);
        partial void OnPublishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private global::System.DateTime _ExpirationDate;
        partial void OnExpirationDateChanging(global::System.DateTime value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublished
        {
            get
            {
                return _IsPublished;
            }
            set
            {
                OnIsPublishedChanging(value);
                ReportPropertyChanging("IsPublished");
                _IsPublished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublished");
                OnIsPublishedChanged();
            }
        }
        private global::System.Boolean _IsPublished;
        partial void OnIsPublishedChanging(global::System.Boolean value);
        partial void OnIsPublishedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DContent_DContentCategory", "DContentCategory")]
        public DContentCategory DContentCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DContentCategory>("Offwind.DbModels.FK_DContent_DContentCategory", "DContentCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DContentCategory>("Offwind.DbModels.FK_DContent_DContentCategory", "DContentCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DContentCategory> DContentCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DContentCategory>("Offwind.DbModels.FK_DContent_DContentCategory", "DContentCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DContentCategory>("Offwind.DbModels.FK_DContent_DContentCategory", "DContentCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DContent_DContentTypes", "DContentType")]
        public DContentType DContentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DContentType>("Offwind.DbModels.FK_DContent_DContentTypes", "DContentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DContentType>("Offwind.DbModels.FK_DContent_DContentTypes", "DContentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DContentType> DContentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DContentType>("Offwind.DbModels.FK_DContent_DContentTypes", "DContentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DContentType>("Offwind.DbModels.FK_DContent_DContentTypes", "DContentType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DContentCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DContentCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DContentCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static DContentCategory CreateDContentCategory(global::System.Guid id, global::System.String name, global::System.String title)
        {
            DContentCategory dContentCategory = new DContentCategory();
            dContentCategory.Id = id;
            dContentCategory.Name = name;
            dContentCategory.Title = title;
            return dContentCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Route
        {
            get
            {
                return _Route;
            }
            set
            {
                OnRouteChanging(value);
                ReportPropertyChanging("Route");
                _Route = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Route");
                OnRouteChanged();
            }
        }
        private global::System.String _Route;
        partial void OnRouteChanging(global::System.String value);
        partial void OnRouteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DContent_DContentCategory", "DContent")]
        public EntityCollection<DContent> DContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DContent>("Offwind.DbModels.FK_DContent_DContentCategory", "DContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DContent>("Offwind.DbModels.FK_DContent_DContentCategory", "DContent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DContentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DContentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DContentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DContentType CreateDContentType(global::System.String id)
        {
            DContentType dContentType = new DContentType();
            dContentType.Id = id;
            return dContentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DContent_DContentTypes", "DContent")]
        public EntityCollection<DContent> DContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DContent>("Offwind.DbModels.FK_DContent_DContentTypes", "DContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DContent>("Offwind.DbModels.FK_DContent_DContentTypes", "DContent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DCountry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DCountry CreateDCountry(global::System.Int32 id, global::System.String name)
        {
            DCountry dCountry = new DCountry();
            dCountry.Id = id;
            dCountry.Name = name;
            return dCountry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DEventApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DEventApplication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DEventApplication object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="company">Initial value of the Company property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        public static DEventApplication CreateDEventApplication(global::System.Guid id, global::System.DateTime created, global::System.DateTime updated, global::System.String fullName, global::System.String email, global::System.String company, global::System.String phone, global::System.String comment)
        {
            DEventApplication dEventApplication = new DEventApplication();
            dEventApplication.Id = id;
            dEventApplication.Created = created;
            dEventApplication.Updated = updated;
            dEventApplication.FullName = fullName;
            dEventApplication.Email = email;
            dEventApplication.Company = company;
            dEventApplication.Phone = phone;
            dEventApplication.Comment = comment;
            return dEventApplication;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DJob")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DJob : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DJob object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="started">Initial value of the Started property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="state">Initial value of the State property.</param>
        public static DJob CreateDJob(global::System.Guid id, global::System.DateTime started, global::System.String owner, global::System.String name, global::System.String state)
        {
            DJob dJob = new DJob();
            dJob.Id = id;
            dJob.Started = started;
            dJob.Owner = owner;
            dJob.Name = name;
            dJob.State = state;
            return dJob;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Started
        {
            get
            {
                return _Started;
            }
            set
            {
                OnStartedChanging(value);
                ReportPropertyChanging("Started");
                _Started = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Started");
                OnStartedChanged();
            }
        }
        private global::System.DateTime _Started;
        partial void OnStartedChanging(global::System.DateTime value);
        partial void OnStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RunningSince
        {
            get
            {
                return _RunningSince;
            }
            set
            {
                OnRunningSinceChanging(value);
                ReportPropertyChanging("RunningSince");
                _RunningSince = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunningSince");
                OnRunningSinceChanged();
            }
        }
        private Nullable<global::System.DateTime> _RunningSince;
        partial void OnRunningSinceChanging(Nullable<global::System.DateTime> value);
        partial void OnRunningSinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Finished
        {
            get
            {
                return _Finished;
            }
            set
            {
                OnFinishedChanging(value);
                ReportPropertyChanging("Finished");
                _Finished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Finished");
                OnFinishedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Finished;
        partial void OnFinishedChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private global::System.String _Result;
        partial void OnResultChanging(global::System.String value);
        partial void OnResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultData
        {
            get
            {
                return _ResultData;
            }
            set
            {
                OnResultDataChanging(value);
                ReportPropertyChanging("ResultData");
                _ResultData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultData");
                OnResultDataChanged();
            }
        }
        private global::System.String _ResultData;
        partial void OnResultDataChanging(global::System.String value);
        partial void OnResultDataChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DMeeting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DMeeting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DMeeting object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="dateTime">Initial value of the DateTime property.</param>
        public static DMeeting CreateDMeeting(global::System.Guid id, global::System.String typeId, global::System.DateTime dateTime)
        {
            DMeeting dMeeting = new DMeeting();
            dMeeting.Id = id;
            dMeeting.TypeId = typeId;
            dMeeting.DateTime = dateTime;
            return dMeeting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.String _TypeId;
        partial void OnTypeIdChanging(global::System.String value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DMeetingFile_DMeeting", "DMeetingFile")]
        public EntityCollection<DMeetingFile> DMeetingFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DMeetingFile>("Offwind.DbModels.FK_DMeetingFile_DMeeting", "DMeetingFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DMeetingFile>("Offwind.DbModels.FK_DMeetingFile_DMeeting", "DMeetingFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DMeetingParticipant_DMeeting", "DMeetingParticipant")]
        public EntityCollection<DMeetingParticipant> DMeetingParticipants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DMeetingParticipant>("Offwind.DbModels.FK_DMeetingParticipant_DMeeting", "DMeetingParticipant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DMeetingParticipant>("Offwind.DbModels.FK_DMeetingParticipant_DMeeting", "DMeetingParticipant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DMeetingFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DMeetingFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DMeetingFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="meetingId">Initial value of the MeetingId property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        public static DMeetingFile CreateDMeetingFile(global::System.Guid id, global::System.Guid meetingId, global::System.String fileName)
        {
            DMeetingFile dMeetingFile = new DMeetingFile();
            dMeetingFile.Id = id;
            dMeetingFile.MeetingId = meetingId;
            dMeetingFile.FileName = fileName;
            return dMeetingFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MeetingId
        {
            get
            {
                return _MeetingId;
            }
            set
            {
                OnMeetingIdChanging(value);
                ReportPropertyChanging("MeetingId");
                _MeetingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingId");
                OnMeetingIdChanged();
            }
        }
        private global::System.Guid _MeetingId;
        partial void OnMeetingIdChanging(global::System.Guid value);
        partial void OnMeetingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DMeetingFile_DMeeting", "DMeeting")]
        public DMeeting DMeeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DMeeting>("Offwind.DbModels.FK_DMeetingFile_DMeeting", "DMeeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DMeeting>("Offwind.DbModels.FK_DMeetingFile_DMeeting", "DMeeting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DMeeting> DMeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DMeeting>("Offwind.DbModels.FK_DMeetingFile_DMeeting", "DMeeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DMeeting>("Offwind.DbModels.FK_DMeetingFile_DMeeting", "DMeeting", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DMeetingParticipant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DMeetingParticipant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DMeetingParticipant object.
        /// </summary>
        /// <param name="meetingId">Initial value of the MeetingId property.</param>
        /// <param name="participant">Initial value of the Participant property.</param>
        public static DMeetingParticipant CreateDMeetingParticipant(global::System.Guid meetingId, global::System.String participant)
        {
            DMeetingParticipant dMeetingParticipant = new DMeetingParticipant();
            dMeetingParticipant.MeetingId = meetingId;
            dMeetingParticipant.Participant = participant;
            return dMeetingParticipant;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MeetingId
        {
            get
            {
                return _MeetingId;
            }
            set
            {
                if (_MeetingId != value)
                {
                    OnMeetingIdChanging(value);
                    ReportPropertyChanging("MeetingId");
                    _MeetingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MeetingId");
                    OnMeetingIdChanged();
                }
            }
        }
        private global::System.Guid _MeetingId;
        partial void OnMeetingIdChanging(global::System.Guid value);
        partial void OnMeetingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Participant
        {
            get
            {
                return _Participant;
            }
            set
            {
                if (_Participant != value)
                {
                    OnParticipantChanging(value);
                    ReportPropertyChanging("Participant");
                    _Participant = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Participant");
                    OnParticipantChanged();
                }
            }
        }
        private global::System.String _Participant;
        partial void OnParticipantChanging(global::System.String value);
        partial void OnParticipantChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DMeetingParticipant_DMeeting", "DMeeting")]
        public DMeeting DMeeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DMeeting>("Offwind.DbModels.FK_DMeetingParticipant_DMeeting", "DMeeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DMeeting>("Offwind.DbModels.FK_DMeetingParticipant_DMeeting", "DMeeting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DMeeting> DMeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DMeeting>("Offwind.DbModels.FK_DMeetingParticipant_DMeeting", "DMeeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DMeeting>("Offwind.DbModels.FK_DMeetingParticipant_DMeeting", "DMeeting", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DMesoscaleDatabase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DMesoscaleDatabase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DMesoscaleDatabase object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DMesoscaleDatabase CreateDMesoscaleDatabase(global::System.Int16 id, global::System.String name)
        {
            DMesoscaleDatabase dMesoscaleDatabase = new DMesoscaleDatabase();
            dMesoscaleDatabase.Id = id;
            dMesoscaleDatabase.Name = name;
            return dMesoscaleDatabase;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int16 _Id;
        partial void OnIdChanging(global::System.Int16 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DMesoscaleTabFile_DMesoscaleDatabase", "DMesoscaleTabFile")]
        public EntityCollection<DMesoscaleTabFile> DMesoscaleTabFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DMesoscaleTabFile>("Offwind.DbModels.FK_DMesoscaleTabFile_DMesoscaleDatabase", "DMesoscaleTabFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DMesoscaleTabFile>("Offwind.DbModels.FK_DMesoscaleTabFile_DMesoscaleDatabase", "DMesoscaleTabFile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DMesoscaleTabFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DMesoscaleTabFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DMesoscaleTabFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="databaseId">Initial value of the DatabaseId property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static DMesoscaleTabFile CreateDMesoscaleTabFile(global::System.Int32 id, global::System.Int16 databaseId, global::System.Decimal latitude, global::System.Decimal longitude, global::System.String text)
        {
            DMesoscaleTabFile dMesoscaleTabFile = new DMesoscaleTabFile();
            dMesoscaleTabFile.Id = id;
            dMesoscaleTabFile.DatabaseId = databaseId;
            dMesoscaleTabFile.Latitude = latitude;
            dMesoscaleTabFile.Longitude = longitude;
            dMesoscaleTabFile.Text = text;
            return dMesoscaleTabFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DatabaseId
        {
            get
            {
                return _DatabaseId;
            }
            set
            {
                OnDatabaseIdChanging(value);
                ReportPropertyChanging("DatabaseId");
                _DatabaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatabaseId");
                OnDatabaseIdChanged();
            }
        }
        private global::System.Int16 _DatabaseId;
        partial void OnDatabaseIdChanging(global::System.Int16 value);
        partial void OnDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Decimal _Latitude;
        partial void OnLatitudeChanging(global::System.Decimal value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Decimal _Longitude;
        partial void OnLongitudeChanging(global::System.Decimal value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DMesoscaleTabFile_DMesoscaleDatabase", "DMesoscaleDatabase")]
        public DMesoscaleDatabase DMesoscaleDatabase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DMesoscaleDatabase>("Offwind.DbModels.FK_DMesoscaleTabFile_DMesoscaleDatabase", "DMesoscaleDatabase").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DMesoscaleDatabase>("Offwind.DbModels.FK_DMesoscaleTabFile_DMesoscaleDatabase", "DMesoscaleDatabase").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DMesoscaleDatabase> DMesoscaleDatabaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DMesoscaleDatabase>("Offwind.DbModels.FK_DMesoscaleTabFile_DMesoscaleDatabase", "DMesoscaleDatabase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DMesoscaleDatabase>("Offwind.DbModels.FK_DMesoscaleTabFile_DMesoscaleDatabase", "DMesoscaleDatabase", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DProperty object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static DProperty CreateDProperty(global::System.String name, global::System.String value)
        {
            DProperty dProperty = new DProperty();
            dProperty.Name = name;
            dProperty.Value = value;
            return dProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DTurbine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DTurbine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DTurbine object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        /// <param name="isPublic">Initial value of the IsPublic property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static DTurbine CreateDTurbine(global::System.Guid id, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean isPublic, global::System.String name, global::System.String description)
        {
            DTurbine dTurbine = new DTurbine();
            dTurbine.Id = id;
            dTurbine.Created = created;
            dTurbine.Updated = updated;
            dTurbine.IsPublic = isPublic;
            dTurbine.Name = name;
            dTurbine.Description = description;
            return dTurbine;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private global::System.Boolean _IsPublic;
        partial void OnIsPublicChanging(global::System.Boolean value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.String _Manufacturer;
        partial void OnManufacturerChanging(global::System.String value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RatedPower
        {
            get
            {
                return _RatedPower;
            }
            set
            {
                OnRatedPowerChanging(value);
                ReportPropertyChanging("RatedPower");
                _RatedPower = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RatedPower");
                OnRatedPowerChanged();
            }
        }
        private Nullable<global::System.Decimal> _RatedPower;
        partial void OnRatedPowerChanging(Nullable<global::System.Decimal> value);
        partial void OnRatedPowerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RotorDiameter
        {
            get
            {
                return _RotorDiameter;
            }
            set
            {
                OnRotorDiameterChanging(value);
                ReportPropertyChanging("RotorDiameter");
                _RotorDiameter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotorDiameter");
                OnRotorDiameterChanged();
            }
        }
        private Nullable<global::System.Decimal> _RotorDiameter;
        partial void OnRotorDiameterChanging(Nullable<global::System.Decimal> value);
        partial void OnRotorDiameterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RotorOrientation
        {
            get
            {
                return _RotorOrientation;
            }
            set
            {
                OnRotorOrientationChanging(value);
                ReportPropertyChanging("RotorOrientation");
                _RotorOrientation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RotorOrientation");
                OnRotorOrientationChanged();
            }
        }
        private global::System.String _RotorOrientation;
        partial void OnRotorOrientationChanging(global::System.String value);
        partial void OnRotorOrientationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RotorConfiguration
        {
            get
            {
                return _RotorConfiguration;
            }
            set
            {
                OnRotorConfigurationChanging(value);
                ReportPropertyChanging("RotorConfiguration");
                _RotorConfiguration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RotorConfiguration");
                OnRotorConfigurationChanged();
            }
        }
        private global::System.String _RotorConfiguration;
        partial void OnRotorConfigurationChanging(global::System.String value);
        partial void OnRotorConfigurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Control
        {
            get
            {
                return _Control;
            }
            set
            {
                OnControlChanging(value);
                ReportPropertyChanging("Control");
                _Control = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Control");
                OnControlChanged();
            }
        }
        private global::System.String _Control;
        partial void OnControlChanging(global::System.String value);
        partial void OnControlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HubHeight
        {
            get
            {
                return _HubHeight;
            }
            set
            {
                OnHubHeightChanging(value);
                ReportPropertyChanging("HubHeight");
                _HubHeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HubHeight");
                OnHubHeightChanged();
            }
        }
        private Nullable<global::System.Decimal> _HubHeight;
        partial void OnHubHeightChanging(Nullable<global::System.Decimal> value);
        partial void OnHubHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HubDiameter
        {
            get
            {
                return _HubDiameter;
            }
            set
            {
                OnHubDiameterChanging(value);
                ReportPropertyChanging("HubDiameter");
                _HubDiameter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HubDiameter");
                OnHubDiameterChanged();
            }
        }
        private Nullable<global::System.Decimal> _HubDiameter;
        partial void OnHubDiameterChanging(Nullable<global::System.Decimal> value);
        partial void OnHubDiameterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WindSpeedCutIn
        {
            get
            {
                return _WindSpeedCutIn;
            }
            set
            {
                OnWindSpeedCutInChanging(value);
                ReportPropertyChanging("WindSpeedCutIn");
                _WindSpeedCutIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WindSpeedCutIn");
                OnWindSpeedCutInChanged();
            }
        }
        private Nullable<global::System.Decimal> _WindSpeedCutIn;
        partial void OnWindSpeedCutInChanging(Nullable<global::System.Decimal> value);
        partial void OnWindSpeedCutInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WindSpeedRated
        {
            get
            {
                return _WindSpeedRated;
            }
            set
            {
                OnWindSpeedRatedChanging(value);
                ReportPropertyChanging("WindSpeedRated");
                _WindSpeedRated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WindSpeedRated");
                OnWindSpeedRatedChanged();
            }
        }
        private Nullable<global::System.Decimal> _WindSpeedRated;
        partial void OnWindSpeedRatedChanging(Nullable<global::System.Decimal> value);
        partial void OnWindSpeedRatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WindSpeedCutOut
        {
            get
            {
                return _WindSpeedCutOut;
            }
            set
            {
                OnWindSpeedCutOutChanging(value);
                ReportPropertyChanging("WindSpeedCutOut");
                _WindSpeedCutOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WindSpeedCutOut");
                OnWindSpeedCutOutChanged();
            }
        }
        private Nullable<global::System.Decimal> _WindSpeedCutOut;
        partial void OnWindSpeedCutOutChanging(Nullable<global::System.Decimal> value);
        partial void OnWindSpeedCutOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RotorSpeedCutIn
        {
            get
            {
                return _RotorSpeedCutIn;
            }
            set
            {
                OnRotorSpeedCutInChanging(value);
                ReportPropertyChanging("RotorSpeedCutIn");
                _RotorSpeedCutIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotorSpeedCutIn");
                OnRotorSpeedCutInChanged();
            }
        }
        private Nullable<global::System.Decimal> _RotorSpeedCutIn;
        partial void OnRotorSpeedCutInChanging(Nullable<global::System.Decimal> value);
        partial void OnRotorSpeedCutInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RotorSpeedRated
        {
            get
            {
                return _RotorSpeedRated;
            }
            set
            {
                OnRotorSpeedRatedChanging(value);
                ReportPropertyChanging("RotorSpeedRated");
                _RotorSpeedRated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotorSpeedRated");
                OnRotorSpeedRatedChanged();
            }
        }
        private Nullable<global::System.Decimal> _RotorSpeedRated;
        partial void OnRotorSpeedRatedChanging(Nullable<global::System.Decimal> value);
        partial void OnRotorSpeedRatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TipSpeedRated
        {
            get
            {
                return _TipSpeedRated;
            }
            set
            {
                OnTipSpeedRatedChanging(value);
                ReportPropertyChanging("TipSpeedRated");
                _TipSpeedRated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TipSpeedRated");
                OnTipSpeedRatedChanged();
            }
        }
        private Nullable<global::System.Decimal> _TipSpeedRated;
        partial void OnTipSpeedRatedChanging(Nullable<global::System.Decimal> value);
        partial void OnTipSpeedRatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RotorMass
        {
            get
            {
                return _RotorMass;
            }
            set
            {
                OnRotorMassChanging(value);
                ReportPropertyChanging("RotorMass");
                _RotorMass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotorMass");
                OnRotorMassChanged();
            }
        }
        private Nullable<global::System.Decimal> _RotorMass;
        partial void OnRotorMassChanging(Nullable<global::System.Decimal> value);
        partial void OnRotorMassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NacelleMass
        {
            get
            {
                return _NacelleMass;
            }
            set
            {
                OnNacelleMassChanging(value);
                ReportPropertyChanging("NacelleMass");
                _NacelleMass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NacelleMass");
                OnNacelleMassChanged();
            }
        }
        private Nullable<global::System.Decimal> _NacelleMass;
        partial void OnNacelleMassChanging(Nullable<global::System.Decimal> value);
        partial void OnNacelleMassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TowerMass
        {
            get
            {
                return _TowerMass;
            }
            set
            {
                OnTowerMassChanging(value);
                ReportPropertyChanging("TowerMass");
                _TowerMass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TowerMass");
                OnTowerMassChanged();
            }
        }
        private Nullable<global::System.Decimal> _TowerMass;
        partial void OnTowerMassChanging(Nullable<global::System.Decimal> value);
        partial void OnTowerMassChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DTurbineParameter_DTurbine", "DTurbineParameter")]
        public EntityCollection<DTurbineParameter> DTurbineParameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DTurbineParameter>("Offwind.DbModels.FK_DTurbineParameter_DTurbine", "DTurbineParameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DTurbineParameter>("Offwind.DbModels.FK_DTurbineParameter_DTurbine", "DTurbineParameter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DTurbineParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DTurbineParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DTurbineParameter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="turbineId">Initial value of the TurbineId property.</param>
        /// <param name="group">Initial value of the Group property.</param>
        /// <param name="parameter">Initial value of the Parameter property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static DTurbineParameter CreateDTurbineParameter(global::System.Guid id, global::System.Guid turbineId, global::System.String group, global::System.String parameter, global::System.String type)
        {
            DTurbineParameter dTurbineParameter = new DTurbineParameter();
            dTurbineParameter.Id = id;
            dTurbineParameter.TurbineId = turbineId;
            dTurbineParameter.Group = group;
            dTurbineParameter.Parameter = parameter;
            dTurbineParameter.Type = type;
            return dTurbineParameter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TurbineId
        {
            get
            {
                return _TurbineId;
            }
            set
            {
                OnTurbineIdChanging(value);
                ReportPropertyChanging("TurbineId");
                _TurbineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TurbineId");
                OnTurbineIdChanged();
            }
        }
        private global::System.Guid _TurbineId;
        partial void OnTurbineIdChanging(global::System.Guid value);
        partial void OnTurbineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Group
        {
            get
            {
                return _Group;
            }
            set
            {
                OnGroupChanging(value);
                ReportPropertyChanging("Group");
                _Group = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Group");
                OnGroupChanged();
            }
        }
        private global::System.String _Group;
        partial void OnGroupChanging(global::System.String value);
        partial void OnGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Parameter
        {
            get
            {
                return _Parameter;
            }
            set
            {
                OnParameterChanging(value);
                ReportPropertyChanging("Parameter");
                _Parameter = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Parameter");
                OnParameterChanged();
            }
        }
        private global::System.String _Parameter;
        partial void OnParameterChanging(global::System.String value);
        partial void OnParameterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValueTxt
        {
            get
            {
                return _ValueTxt;
            }
            set
            {
                OnValueTxtChanging(value);
                ReportPropertyChanging("ValueTxt");
                _ValueTxt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValueTxt");
                OnValueTxtChanged();
            }
        }
        private global::System.String _ValueTxt;
        partial void OnValueTxtChanging(global::System.String value);
        partial void OnValueTxtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ValueNumeric
        {
            get
            {
                return _ValueNumeric;
            }
            set
            {
                OnValueNumericChanging(value);
                ReportPropertyChanging("ValueNumeric");
                _ValueNumeric = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValueNumeric");
                OnValueNumericChanged();
            }
        }
        private Nullable<global::System.Decimal> _ValueNumeric;
        partial void OnValueNumericChanging(Nullable<global::System.Decimal> value);
        partial void OnValueNumericChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DTurbineParameter_DTurbine", "DTurbine")]
        public DTurbine DTurbine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DTurbine>("Offwind.DbModels.FK_DTurbineParameter_DTurbine", "DTurbine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DTurbine>("Offwind.DbModels.FK_DTurbineParameter_DTurbine", "DTurbine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DTurbine> DTurbineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DTurbine>("Offwind.DbModels.FK_DTurbineParameter_DTurbine", "DTurbine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DTurbine>("Offwind.DbModels.FK_DTurbineParameter_DTurbine", "DTurbine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DUserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DUserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DUserProfile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="isVerified">Initial value of the IsVerified property.</param>
        public static DUserProfile CreateDUserProfile(global::System.Int32 userId, global::System.String userName, global::System.Boolean isVerified)
        {
            DUserProfile dUserProfile = new DUserProfile();
            dUserProfile.UserId = userId;
            dUserProfile.UserName = userName;
            dUserProfile.IsVerified = isVerified;
            return dUserProfile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVerified
        {
            get
            {
                return _IsVerified;
            }
            set
            {
                OnIsVerifiedChanging(value);
                ReportPropertyChanging("IsVerified");
                _IsVerified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVerified");
                OnIsVerifiedChanged();
            }
        }
        private global::System.Boolean _IsVerified;
        partial void OnIsVerifiedChanging(global::System.Boolean value);
        partial void OnIsVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VerificationCode
        {
            get
            {
                return _VerificationCode;
            }
            set
            {
                OnVerificationCodeChanging(value);
                ReportPropertyChanging("VerificationCode");
                _VerificationCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VerificationCode");
                OnVerificationCodeChanged();
            }
        }
        private Nullable<global::System.Guid> _VerificationCode;
        partial void OnVerificationCodeChanging(Nullable<global::System.Guid> value);
        partial void OnVerificationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ResetPasswordCode
        {
            get
            {
                return _ResetPasswordCode;
            }
            set
            {
                OnResetPasswordCodeChanging(value);
                ReportPropertyChanging("ResetPasswordCode");
                _ResetPasswordCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResetPasswordCode");
                OnResetPasswordCodeChanged();
            }
        }
        private Nullable<global::System.Guid> _ResetPasswordCode;
        partial void OnResetPasswordCodeChanging(Nullable<global::System.Guid> value);
        partial void OnResetPasswordCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Info
        {
            get
            {
                return _Info;
            }
            set
            {
                OnInfoChanging(value);
                ReportPropertyChanging("Info");
                _Info = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Info");
                OnInfoChanged();
            }
        }
        private global::System.String _Info;
        partial void OnInfoChanging(global::System.String value);
        partial void OnInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DUserProfile_webpages_Membership", "webpages_Membership")]
        public webpages_Membership webpages_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_Membership>("Offwind.DbModels.FK_DUserProfile_webpages_Membership", "webpages_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_Membership>("Offwind.DbModels.FK_DUserProfile_webpages_Membership", "webpages_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<webpages_Membership> webpages_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<webpages_Membership>("Offwind.DbModels.FK_DUserProfile_webpages_Membership", "webpages_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<webpages_Membership>("Offwind.DbModels.FK_DUserProfile_webpages_Membership", "webpages_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "webpages_UsersInRoles", "webpages_Roles")]
        public EntityCollection<webpages_Roles> webpages_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<webpages_Roles>("Offwind.DbModels.webpages_UsersInRoles", "webpages_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<webpages_Roles>("Offwind.DbModels.webpages_UsersInRoles", "webpages_Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DWindFarm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DWindFarm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DWindFarm object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isPublic">Initial value of the IsPublic property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="urlOfficial">Initial value of the UrlOfficial property.</param>
        /// <param name="urlPublicWiki">Initial value of the UrlPublicWiki property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="geoLat">Initial value of the GeoLat property.</param>
        /// <param name="geoLng">Initial value of the GeoLng property.</param>
        /// <param name="totalCapacity">Initial value of the TotalCapacity property.</param>
        public static DWindFarm CreateDWindFarm(global::System.Guid id, global::System.Boolean isPublic, global::System.String name, global::System.String country, global::System.String urlOfficial, global::System.String urlPublicWiki, global::System.String description, global::System.Decimal geoLat, global::System.Decimal geoLng, global::System.Decimal totalCapacity)
        {
            DWindFarm dWindFarm = new DWindFarm();
            dWindFarm.Id = id;
            dWindFarm.IsPublic = isPublic;
            dWindFarm.Name = name;
            dWindFarm.Country = country;
            dWindFarm.UrlOfficial = urlOfficial;
            dWindFarm.UrlPublicWiki = urlPublicWiki;
            dWindFarm.Description = description;
            dWindFarm.GeoLat = geoLat;
            dWindFarm.GeoLng = geoLng;
            dWindFarm.TotalCapacity = totalCapacity;
            return dWindFarm;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Updated;
        partial void OnUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TurbineTypeId
        {
            get
            {
                return _TurbineTypeId;
            }
            set
            {
                OnTurbineTypeIdChanging(value);
                ReportPropertyChanging("TurbineTypeId");
                _TurbineTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TurbineTypeId");
                OnTurbineTypeIdChanged();
            }
        }
        private Nullable<global::System.Guid> _TurbineTypeId;
        partial void OnTurbineTypeIdChanging(Nullable<global::System.Guid> value);
        partial void OnTurbineTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private global::System.Boolean _IsPublic;
        partial void OnIsPublicChanging(global::System.Boolean value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UrlOfficial
        {
            get
            {
                return _UrlOfficial;
            }
            set
            {
                OnUrlOfficialChanging(value);
                ReportPropertyChanging("UrlOfficial");
                _UrlOfficial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UrlOfficial");
                OnUrlOfficialChanged();
            }
        }
        private global::System.String _UrlOfficial;
        partial void OnUrlOfficialChanging(global::System.String value);
        partial void OnUrlOfficialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UrlPublicWiki
        {
            get
            {
                return _UrlPublicWiki;
            }
            set
            {
                OnUrlPublicWikiChanging(value);
                ReportPropertyChanging("UrlPublicWiki");
                _UrlPublicWiki = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UrlPublicWiki");
                OnUrlPublicWikiChanged();
            }
        }
        private global::System.String _UrlPublicWiki;
        partial void OnUrlPublicWikiChanging(global::System.String value);
        partial void OnUrlPublicWikiChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GeoLat
        {
            get
            {
                return _GeoLat;
            }
            set
            {
                OnGeoLatChanging(value);
                ReportPropertyChanging("GeoLat");
                _GeoLat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GeoLat");
                OnGeoLatChanged();
            }
        }
        private global::System.Decimal _GeoLat;
        partial void OnGeoLatChanging(global::System.Decimal value);
        partial void OnGeoLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GeoLng
        {
            get
            {
                return _GeoLng;
            }
            set
            {
                OnGeoLngChanging(value);
                ReportPropertyChanging("GeoLng");
                _GeoLng = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GeoLng");
                OnGeoLngChanged();
            }
        }
        private global::System.Decimal _GeoLng;
        partial void OnGeoLngChanging(global::System.Decimal value);
        partial void OnGeoLngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalCapacity
        {
            get
            {
                return _TotalCapacity;
            }
            set
            {
                OnTotalCapacityChanging(value);
                ReportPropertyChanging("TotalCapacity");
                _TotalCapacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalCapacity");
                OnTotalCapacityChanged();
            }
        }
        private global::System.Decimal _TotalCapacity;
        partial void OnTotalCapacityChanging(global::System.Decimal value);
        partial void OnTotalCapacityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DWindFarmTurbine_DWindFarm", "DWindFarmTurbine")]
        public EntityCollection<DWindFarmTurbine> DWindFarmTurbines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DWindFarmTurbine>("Offwind.DbModels.FK_DWindFarmTurbine_DWindFarm", "DWindFarmTurbine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DWindFarmTurbine>("Offwind.DbModels.FK_DWindFarmTurbine_DWindFarm", "DWindFarmTurbine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="DWindFarmTurbine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DWindFarmTurbine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DWindFarmTurbine object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="windFarmId">Initial value of the WindFarmId property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        /// <param name="z">Initial value of the Z property.</param>
        public static DWindFarmTurbine CreateDWindFarmTurbine(global::System.Guid id, global::System.Guid windFarmId, global::System.Int32 number, global::System.Decimal x, global::System.Decimal y, global::System.Decimal z)
        {
            DWindFarmTurbine dWindFarmTurbine = new DWindFarmTurbine();
            dWindFarmTurbine.Id = id;
            dWindFarmTurbine.WindFarmId = windFarmId;
            dWindFarmTurbine.Number = number;
            dWindFarmTurbine.X = x;
            dWindFarmTurbine.Y = y;
            dWindFarmTurbine.Z = z;
            return dWindFarmTurbine;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid WindFarmId
        {
            get
            {
                return _WindFarmId;
            }
            set
            {
                OnWindFarmIdChanging(value);
                ReportPropertyChanging("WindFarmId");
                _WindFarmId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WindFarmId");
                OnWindFarmIdChanged();
            }
        }
        private global::System.Guid _WindFarmId;
        partial void OnWindFarmIdChanging(global::System.Guid value);
        partial void OnWindFarmIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private global::System.Decimal _X;
        partial void OnXChanging(global::System.Decimal value);
        partial void OnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private global::System.Decimal _Y;
        partial void OnYChanging(global::System.Decimal value);
        partial void OnYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Z
        {
            get
            {
                return _Z;
            }
            set
            {
                OnZChanging(value);
                ReportPropertyChanging("Z");
                _Z = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Z");
                OnZChanged();
            }
        }
        private global::System.Decimal _Z;
        partial void OnZChanging(global::System.Decimal value);
        partial void OnZChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DWindFarmTurbine_DWindFarm", "DWindFarm")]
        public DWindFarm DWindFarm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DWindFarm>("Offwind.DbModels.FK_DWindFarmTurbine_DWindFarm", "DWindFarm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DWindFarm>("Offwind.DbModels.FK_DWindFarmTurbine_DWindFarm", "DWindFarm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DWindFarm> DWindFarmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DWindFarm>("Offwind.DbModels.FK_DWindFarmTurbine_DWindFarm", "DWindFarm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DWindFarm>("Offwind.DbModels.FK_DWindFarmTurbine_DWindFarm", "DWindFarm", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="thread">Initial value of the Thread property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        /// <param name="logger">Initial value of the Logger property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static Log CreateLog(global::System.Int32 id, global::System.DateTime date, global::System.String thread, global::System.String level, global::System.String logger, global::System.String message)
        {
            Log log = new Log();
            log.Id = id;
            log.Date = date;
            log.Thread = thread;
            log.Level = level;
            log.Logger = logger;
            log.Message = message;
            return log;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Thread
        {
            get
            {
                return _Thread;
            }
            set
            {
                OnThreadChanging(value);
                ReportPropertyChanging("Thread");
                _Thread = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Thread");
                OnThreadChanged();
            }
        }
        private global::System.String _Thread;
        partial void OnThreadChanging(global::System.String value);
        partial void OnThreadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Logger
        {
            get
            {
                return _Logger;
            }
            set
            {
                OnLoggerChanging(value);
                ReportPropertyChanging("Logger");
                _Logger = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Logger");
                OnLoggerChanged();
            }
        }
        private global::System.String _Logger;
        partial void OnLoggerChanging(global::System.String value);
        partial void OnLoggerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private global::System.String _Exception;
        partial void OnExceptionChanging(global::System.String value);
        partial void OnExceptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="Page")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Page : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Page object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="updated">Initial value of the Updated property.</param>
        /// <param name="published">Initial value of the Published property.</param>
        /// <param name="homePage">Initial value of the HomePage property.</param>
        /// <param name="isPublished">Initial value of the IsPublished property.</param>
        /// <param name="votes">Initial value of the Votes property.</param>
        public static Page CreatePage(global::System.Int32 id, global::System.DateTime created, global::System.DateTime updated, global::System.DateTime published, global::System.Boolean homePage, global::System.Boolean isPublished, global::System.Int32 votes)
        {
            Page page = new Page();
            page.Id = id;
            page.Created = created;
            page.Updated = updated;
            page.Published = published;
            page.HomePage = homePage;
            page.IsPublished = isPublished;
            page.Votes = votes;
            return page;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Slug
        {
            get
            {
                return _Slug;
            }
            set
            {
                OnSlugChanging(value);
                ReportPropertyChanging("Slug");
                _Slug = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Slug");
                OnSlugChanged();
            }
        }
        private global::System.String _Slug;
        partial void OnSlugChanging(global::System.String value);
        partial void OnSlugChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageType
        {
            get
            {
                return _PageType;
            }
            set
            {
                OnPageTypeChanging(value);
                ReportPropertyChanging("PageType");
                _PageType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageType");
                OnPageTypeChanged();
            }
        }
        private global::System.String _PageType;
        partial void OnPageTypeChanging(global::System.String value);
        partial void OnPageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageTitle
        {
            get
            {
                return _PageTitle;
            }
            set
            {
                OnPageTitleChanging(value);
                ReportPropertyChanging("PageTitle");
                _PageTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageTitle");
                OnPageTitleChanged();
            }
        }
        private global::System.String _PageTitle;
        partial void OnPageTitleChanging(global::System.String value);
        partial void OnPageTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Announce
        {
            get
            {
                return _Announce;
            }
            set
            {
                OnAnnounceChanging(value);
                ReportPropertyChanging("Announce");
                _Announce = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Announce");
                OnAnnounceChanged();
            }
        }
        private global::System.String _Announce;
        partial void OnAnnounceChanging(global::System.String value);
        partial void OnAnnounceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Published
        {
            get
            {
                return _Published;
            }
            set
            {
                OnPublishedChanging(value);
                ReportPropertyChanging("Published");
                _Published = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Published");
                OnPublishedChanged();
            }
        }
        private global::System.DateTime _Published;
        partial void OnPublishedChanging(global::System.DateTime value);
        partial void OnPublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HomePage
        {
            get
            {
                return _HomePage;
            }
            set
            {
                OnHomePageChanging(value);
                ReportPropertyChanging("HomePage");
                _HomePage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HomePage");
                OnHomePageChanged();
            }
        }
        private global::System.Boolean _HomePage;
        partial void OnHomePageChanging(global::System.Boolean value);
        partial void OnHomePageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _Priority;
        partial void OnPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublished
        {
            get
            {
                return _IsPublished;
            }
            set
            {
                OnIsPublishedChanging(value);
                ReportPropertyChanging("IsPublished");
                _IsPublished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublished");
                OnIsPublishedChanged();
            }
        }
        private global::System.Boolean _IsPublished;
        partial void OnIsPublishedChanging(global::System.Boolean value);
        partial void OnIsPublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Votes
        {
            get
            {
                return _Votes;
            }
            set
            {
                OnVotesChanging(value);
                ReportPropertyChanging("Votes");
                _Votes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Votes");
                OnVotesChanged();
            }
        }
        private global::System.Int32 _Votes;
        partial void OnVotesChanging(global::System.Int32 value);
        partial void OnVotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExtraModule
        {
            get
            {
                return _ExtraModule;
            }
            set
            {
                OnExtraModuleChanging(value);
                ReportPropertyChanging("ExtraModule");
                _ExtraModule = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExtraModule");
                OnExtraModuleChanged();
            }
        }
        private global::System.String _ExtraModule;
        partial void OnExtraModuleChanging(global::System.String value);
        partial void OnExtraModuleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="VPartner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VPartner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VPartner object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static VPartner CreateVPartner(global::System.Int32 userId, global::System.String userName, global::System.Int32 roleId)
        {
            VPartner vPartner = new VPartner();
            vPartner.UserId = userId;
            vPartner.UserName = userName;
            vPartner.RoleId = roleId;
            return vPartner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="VRouteItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VRouteItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VRouteItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="route">Initial value of the Route property.</param>
        public static VRouteItem CreateVRouteItem(global::System.Guid id, global::System.String typeId, global::System.String route)
        {
            VRouteItem vRouteItem = new VRouteItem();
            vRouteItem.Id = id;
            vRouteItem.TypeId = typeId;
            vRouteItem.Route = route;
            return vRouteItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                if (_TypeId != value)
                {
                    OnTypeIdChanging(value);
                    ReportPropertyChanging("TypeId");
                    _TypeId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TypeId");
                    OnTypeIdChanged();
                }
            }
        }
        private global::System.String _TypeId;
        partial void OnTypeIdChanging(global::System.String value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Guid> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RouteTitle
        {
            get
            {
                return _RouteTitle;
            }
            set
            {
                OnRouteTitleChanging(value);
                ReportPropertyChanging("RouteTitle");
                _RouteTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RouteTitle");
                OnRouteTitleChanged();
            }
        }
        private global::System.String _RouteTitle;
        partial void OnRouteTitleChanging(global::System.String value);
        partial void OnRouteTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Route
        {
            get
            {
                return _Route;
            }
            set
            {
                if (_Route != value)
                {
                    OnRouteChanging(value);
                    ReportPropertyChanging("Route");
                    _Route = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Route");
                    OnRouteChanged();
                }
            }
        }
        private global::System.String _Route;
        partial void OnRouteChanging(global::System.String value);
        partial void OnRouteChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="VSmallMesoscaleTabFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VSmallMesoscaleTabFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VSmallMesoscaleTabFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="databaseId">Initial value of the DatabaseId property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        public static VSmallMesoscaleTabFile CreateVSmallMesoscaleTabFile(global::System.Int32 id, global::System.Int16 databaseId, global::System.Decimal latitude, global::System.Decimal longitude)
        {
            VSmallMesoscaleTabFile vSmallMesoscaleTabFile = new VSmallMesoscaleTabFile();
            vSmallMesoscaleTabFile.Id = id;
            vSmallMesoscaleTabFile.DatabaseId = databaseId;
            vSmallMesoscaleTabFile.Latitude = latitude;
            vSmallMesoscaleTabFile.Longitude = longitude;
            return vSmallMesoscaleTabFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DatabaseId
        {
            get
            {
                return _DatabaseId;
            }
            set
            {
                if (_DatabaseId != value)
                {
                    OnDatabaseIdChanging(value);
                    ReportPropertyChanging("DatabaseId");
                    _DatabaseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DatabaseId");
                    OnDatabaseIdChanged();
                }
            }
        }
        private global::System.Int16 _DatabaseId;
        partial void OnDatabaseIdChanging(global::System.Int16 value);
        partial void OnDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                if (_Latitude != value)
                {
                    OnLatitudeChanging(value);
                    ReportPropertyChanging("Latitude");
                    _Latitude = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Latitude");
                    OnLatitudeChanged();
                }
            }
        }
        private global::System.Decimal _Latitude;
        partial void OnLatitudeChanging(global::System.Decimal value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                if (_Longitude != value)
                {
                    OnLongitudeChanging(value);
                    ReportPropertyChanging("Longitude");
                    _Longitude = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Longitude");
                    OnLongitudeChanged();
                }
            }
        }
        private global::System.Decimal _Longitude;
        partial void OnLongitudeChanging(global::System.Decimal value);
        partial void OnLongitudeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="VUserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VUserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VUserRole object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static VUserRole CreateVUserRole(global::System.Int32 userId, global::System.Int32 roleId, global::System.String roleName)
        {
            VUserRole vUserRole = new VUserRole();
            vUserRole.UserId = userId;
            vUserRole.RoleId = roleId;
            vUserRole.RoleName = roleName;
            return vUserRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                if (_RoleName != value)
                {
                    OnRoleNameChanging(value);
                    ReportPropertyChanging("RoleName");
                    _RoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleName");
                    OnRoleNameChanged();
                }
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="webpages_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_Membership object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="passwordFailuresSinceLastSuccess">Initial value of the PasswordFailuresSinceLastSuccess property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        public static webpages_Membership Createwebpages_Membership(global::System.Int32 userId, global::System.Int32 passwordFailuresSinceLastSuccess, global::System.String password, global::System.String passwordSalt)
        {
            webpages_Membership webpages_Membership = new webpages_Membership();
            webpages_Membership.UserId = userId;
            webpages_Membership.PasswordFailuresSinceLastSuccess = passwordFailuresSinceLastSuccess;
            webpages_Membership.Password = password;
            webpages_Membership.PasswordSalt = passwordSalt;
            return webpages_Membership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConfirmationToken
        {
            get
            {
                return _ConfirmationToken;
            }
            set
            {
                OnConfirmationTokenChanging(value);
                ReportPropertyChanging("ConfirmationToken");
                _ConfirmationToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConfirmationToken");
                OnConfirmationTokenChanged();
            }
        }
        private global::System.String _ConfirmationToken;
        partial void OnConfirmationTokenChanging(global::System.String value);
        partial void OnConfirmationTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsConfirmed
        {
            get
            {
                return _IsConfirmed;
            }
            set
            {
                OnIsConfirmedChanging(value);
                ReportPropertyChanging("IsConfirmed");
                _IsConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConfirmed");
                OnIsConfirmedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsConfirmed;
        partial void OnIsConfirmedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPasswordFailureDate
        {
            get
            {
                return _LastPasswordFailureDate;
            }
            set
            {
                OnLastPasswordFailureDateChanging(value);
                ReportPropertyChanging("LastPasswordFailureDate");
                _LastPasswordFailureDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordFailureDate");
                OnLastPasswordFailureDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPasswordFailureDate;
        partial void OnLastPasswordFailureDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPasswordFailureDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFailuresSinceLastSuccess
        {
            get
            {
                return _PasswordFailuresSinceLastSuccess;
            }
            set
            {
                OnPasswordFailuresSinceLastSuccessChanging(value);
                ReportPropertyChanging("PasswordFailuresSinceLastSuccess");
                _PasswordFailuresSinceLastSuccess = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFailuresSinceLastSuccess");
                OnPasswordFailuresSinceLastSuccessChanged();
            }
        }
        private global::System.Int32 _PasswordFailuresSinceLastSuccess;
        partial void OnPasswordFailuresSinceLastSuccessChanging(global::System.Int32 value);
        partial void OnPasswordFailuresSinceLastSuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordChangedDate
        {
            get
            {
                return _PasswordChangedDate;
            }
            set
            {
                OnPasswordChangedDateChanging(value);
                ReportPropertyChanging("PasswordChangedDate");
                _PasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordChangedDate");
                OnPasswordChangedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordChangedDate;
        partial void OnPasswordChangedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordVerificationToken
        {
            get
            {
                return _PasswordVerificationToken;
            }
            set
            {
                OnPasswordVerificationTokenChanging(value);
                ReportPropertyChanging("PasswordVerificationToken");
                _PasswordVerificationToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordVerificationToken");
                OnPasswordVerificationTokenChanged();
            }
        }
        private global::System.String _PasswordVerificationToken;
        partial void OnPasswordVerificationTokenChanging(global::System.String value);
        partial void OnPasswordVerificationTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordVerificationTokenExpirationDate
        {
            get
            {
                return _PasswordVerificationTokenExpirationDate;
            }
            set
            {
                OnPasswordVerificationTokenExpirationDateChanging(value);
                ReportPropertyChanging("PasswordVerificationTokenExpirationDate");
                _PasswordVerificationTokenExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordVerificationTokenExpirationDate");
                OnPasswordVerificationTokenExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordVerificationTokenExpirationDate;
        partial void OnPasswordVerificationTokenExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordVerificationTokenExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "FK_DUserProfile_webpages_Membership", "DUserProfile")]
        public DUserProfile DUserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_webpages_Membership", "DUserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_webpages_Membership", "DUserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DUserProfile> DUserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_webpages_Membership", "DUserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DUserProfile>("Offwind.DbModels.FK_DUserProfile_webpages_Membership", "DUserProfile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="webpages_OAuthMembership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_OAuthMembership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_OAuthMembership object.
        /// </summary>
        /// <param name="provider">Initial value of the Provider property.</param>
        /// <param name="providerUserId">Initial value of the ProviderUserId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static webpages_OAuthMembership Createwebpages_OAuthMembership(global::System.String provider, global::System.String providerUserId, global::System.Int32 userId)
        {
            webpages_OAuthMembership webpages_OAuthMembership = new webpages_OAuthMembership();
            webpages_OAuthMembership.Provider = provider;
            webpages_OAuthMembership.ProviderUserId = providerUserId;
            webpages_OAuthMembership.UserId = userId;
            return webpages_OAuthMembership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provider
        {
            get
            {
                return _Provider;
            }
            set
            {
                if (_Provider != value)
                {
                    OnProviderChanging(value);
                    ReportPropertyChanging("Provider");
                    _Provider = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Provider");
                    OnProviderChanged();
                }
            }
        }
        private global::System.String _Provider;
        partial void OnProviderChanging(global::System.String value);
        partial void OnProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderUserId
        {
            get
            {
                return _ProviderUserId;
            }
            set
            {
                if (_ProviderUserId != value)
                {
                    OnProviderUserIdChanging(value);
                    ReportPropertyChanging("ProviderUserId");
                    _ProviderUserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProviderUserId");
                    OnProviderUserIdChanged();
                }
            }
        }
        private global::System.String _ProviderUserId;
        partial void OnProviderUserIdChanging(global::System.String value);
        partial void OnProviderUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Offwind.DbModels", Name="webpages_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_Roles object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static webpages_Roles Createwebpages_Roles(global::System.Int32 roleId, global::System.String roleName)
        {
            webpages_Roles webpages_Roles = new webpages_Roles();
            webpages_Roles.RoleId = roleId;
            webpages_Roles.RoleName = roleName;
            return webpages_Roles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Offwind.DbModels", "webpages_UsersInRoles", "DUserProfile")]
        public EntityCollection<DUserProfile> DUserProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DUserProfile>("Offwind.DbModels.webpages_UsersInRoles", "DUserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DUserProfile>("Offwind.DbModels.webpages_UsersInRoles", "DUserProfile", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Offwind.DbModels", Name="sp_helpdiagramdefinition_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagramdefinition_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Offwind.DbModels", Name="sp_helpdiagrams_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagrams_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sp_helpdiagrams_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        public static sp_helpdiagrams_Result Createsp_helpdiagrams_Result(global::System.String name, global::System.Int32 id, global::System.Int32 ownerID)
        {
            sp_helpdiagrams_Result sp_helpdiagrams_Result = new sp_helpdiagrams_Result();
            sp_helpdiagrams_Result.Name = name;
            sp_helpdiagrams_Result.ID = id;
            sp_helpdiagrams_Result.OwnerID = ownerID;
            return sp_helpdiagrams_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();

        #endregion

    }

    #endregion

    
}
